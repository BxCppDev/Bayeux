# - Config file for the Bayeux package
# It defines the following variables
#
#  Bayeux_DOXYGEN_HTML_DIR - path to directory holding Doxygen docs
#                            for Bayeux. Empty if docs were not built
#  Bayeux_DOXYGEN_TAGFILE  - path to Doxygen tagfile for Bayeux's docs
#                            Empty if docs were not built

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

# - Core API version
set(Bayeux_VERSION "@Bayeux_VERSION@")
# - Development Tag
set(Bayeux_VERSION_REVISION "@Bayeux_VERSION_REVISION@")

# Component Availability
set(Bayeux_qt_FOUND "@BAYEUX_WITH_QT_GUI@")
set(Bayeux_geant4_FOUND "@BAYEUX_WITH_GEANT4_MODULE@")
set(Bayeux_mcnp_FOUND "@BAYEUX_WITH_MCNP_MODULE@")

#-----------------------------------------------------------------------
# Start of CMake Generated
@PACKAGE_INIT@
# END OF CMAKE GENERATED

#-----------------------------------------------------------------------
# - Refind third party deps here to regenerate imported targets
#   Use exact versions to guarantee(*) binary compatibilty
#   (*) at least at the API versioning level...
# - Boost
set(Boost_NO_BOOST_CMAKE ON)
find_package(Boost @Boost_MAJOR_VERSION@.@Boost_MINOR_VERSION@ EXACT REQUIRED
  COMPONENTS
    filesystem
    system
    serialization
    iostreams
    program_options
    thread
  )

# - CLHEP
find_package(CLHEP @CLHEP_VERSION@ EXACT REQUIRED
  NO_MODULE
  )

# - GSL
find_package(GSL @GSL_VERSION@ EXACT REQUIRED)

# - ROOT
# ROOT can F-up the module path and insert it's own
# modules. Prevent it doing this.
set(CMAKE_MODULE_PATH_PREROOT ${CMAKE_MODULE_PATH})
find_package(ROOT @ROOT_VERSION@ EXACT REQUIRED
  COMPONENTS RIO Tree
  )
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH_PREROOT})


# - CAMP
find_package(CAMP @CAMP_VERSION@ EXACT REQUIRED)

# - Geant4 is NOT here because we don't expose it to clients

# - Qt
if(Bayeux_qt_FOUND)
  # Make sure targets like "Qt5::Core", ... "Qt5::Svg" are recognized
  # in client package
  find_package(Qt5Core @Qt5Core_VERSION@ EXACT REQUIRED)       #PATHS "@Qt5Core_DIR@")
  find_package(Qt5Widgets @Qt5Widgets_VERSION@ EXACT REQUIRED) #PATHS "@Qt5Widgets_DIR@")
  find_package(Qt5Gui @Qt5Gui_VERSION@ EXACT REQUIRED)         #PATHS "@Qt5Gui_DIR@")
  find_package(Qt5Svg @Qt5Svg_VERSION@ EXACT REQUIRED)         #PATHS "@Qt5Svg_DIR@")
endif()

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT Bayeux_TARGETS_LOADED)
  include("${CMAKE_CURRENT_LIST_DIR}/BayeuxTargets.cmake")
  set(Bayeux_TARGETS_LOADED 1)
endif()

#-----------------------------------------------------------------------
# Documentation - loaded optionally from its own file
#
include("${CMAKE_CURRENT_LIST_DIR}/BayeuxDocs.cmake" OPTIONAL)

#-----------------------------------------------------------------------
# Component validation
#
check_required_components(Bayeux)
