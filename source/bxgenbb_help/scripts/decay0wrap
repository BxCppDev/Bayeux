#!/usr/bin/env bash 
# -*- mode: shell-script; -*- 
# decay0wrap
# A wrapper shell script for the original decay0 Fortran program (by V. Tretyak)
# Author : F.Mauger <mauger@lpccaen.in2p3.fr>

APPNAME="decay0wrap"

opwd=$(pwd)
	
function my_exit ()
{
    cd ${opwd}
    exit $1
}

appname=${APPNAME} 
appversion=0.1 
libpkgtools_sourced=0

if [ ${libpkgtools_sourced} -eq 0 ]; then
    if [ "x${PKGTOOLS_LIB_SH}" != "x" ]; then
	if [ -f ${PKGTOOLS_LIB_SH} ]; then
	    source ${PKGTOOLS_LIB_SH}    
	    libpkgtools_sourced=1
	fi
    fi
fi

if [ ${libpkgtools_sourced} -eq 0 ]; then
  if [ "x${GENBB_HELP_SHARE_DIR}" != "x" ]; then
     echo " ERROR: ${appname}: GENBB_HELP_SHARE_DIR is not defined ! Abort !" >&2  
     my_exit 1
  else
    if [ ! -d ${GENBB_HELP_SHARE_DIR_ROOT} ]; then
	echo " ERROR: ${appname}: GENBB_HELP_ROOT directory does not exist ! Abort !" >&2  
	my_exit 1
    fi
    libpkgtools_sh=${GENBB_HELP_SHARE_DIR_ROOT}/pkgtools/libpkgtools.sh 
    if [ -f ${libpkgtools_sh} ]; then
	source ${libpkgtools_sh}    
	libpkgtools_sourced=1
    fi
fi

if [ ${libpkgtools_sourced} -eq 0 ]; then
    pkgtools_root=${PKGTOOLS_ROOT}
    if [ "x${pkgtools_root}" != "x" ]; then
	if [ -f ${pkgtools_root}/lib/libpkgtools.sh ]; then
	    source ${pkgtools_root}/lib/libpkgtools.sh
	    libpkgtools_sourced=1
	fi
    fi
fi

if [ ${libpkgtools_sourced} -eq 0 ]; then
    echo " ERROR: ${appname}: Cannot find any 'libpkgtools.sh' setup file ! Abort !" >&2  
    my_exit 1
fi

pkgtools__msg_not_using_quiet
pkgtools__msg_not_using_verbose
pkgtools__msg_not_using_debug
pkgtools__msg_not_using_devel
pkgtools__msg_not_using_date
pkgtools__msg_using_color
pkgtools__ui_interactive
pkgtools__ui_not_using_gui

function print_usage ()
{
    cat <<EOF

  ${appname} -- Description

  Usage:

    ${appname} [Options...] [Args...]

  Options:

    -h 
    --help    : print this help then exit

    --version  : print version then exit

    -d 
    --debug   : print debug mode informations

    -D 
    --devel   : print devel mode informations

    -v 
    --verbose : verbose print

    -i      
    --interactive  : run in interactive mode (this is the default)

    -b      
    --batch        : run in batch mode (no user interaction, disable GUI features)

    --no-color     : use un-colored message output

    --gui          : use GUI user interface (interactive mode only)

  Examples:

    shell> ${appname} --help
 
EOF
    return 0
}

#######################################################

batch_conf=

the_remaining_options=

parse_switch=1
while [ -n "$1" ]; do
    token="$1"
    if [ "${token:0:1}" = "-" ]; then
	opt=${token}
	if [ ${parse_switch} -eq 0 ]; then
	    break
	fi
	if [ "${opt}" = "-h" -o "${opt}" = "--help" ]; then
	    print_usage
	    my_exit 0
	elif [ "${opt}" = "--version" ]; then
	    echo ${appversion}
	    my_exit 0
	elif [ "${opt}" = "-d" -o "${opt}" = "--debug" ]; then
	    pkgtools__msg_using_debug
	elif [ "${opt}" = "-D" -o "${opt}" = "--devel" ]; then
	    pkgtools__msg_using_devel
	elif [ "${opt}" = "-v" -o "${opt}" = "--verbose" ]; then
	    pkgtools__msg_using_verbose
	elif [ "${opt}" = "-i" -o "${opt}" = "--interactive" ]; then
	    pkgtools__ui_interactive
	elif [ "${opt}" = "-b" -o "${opt}" = "--batch" ]; then
	    pkgtools__ui_batch
	elif [ "${opt}" = "--no-color" ]; then
	    pkgtools__msg_not_using_color
	elif [ "${opt}" = "-G" -o "${opt}" = "--gui" ]; then
	    pkgtools__ui_using_gui
	    pkgtools__msg_devel "Using GUI" 	
	else
	    pkgtools__msg_error "Invalid option '${opt}' !" 
	    my_exit 1
	fi
    else
	arg=${token}
	parse_switch=0
	if [ "x${batch_conf}" = "x" ]; then
	    batch_conf="${arg}"	
	else
	    pkgtools__msg_error "Invalid argument '${arg}' !"
	    my_exit 1
	fi
    fi
    shift 1
done

the_remaining_options="$@"
pkgtools__msg_devel "batch_conf=${batch_conf}"
pkgtools__msg_devel "remaining_options=${the_remaining_options}"

# Batch mode:
pkgtools__ui_is_interactive
if [ $? -ne 0 ]; then
    pkgtools__ui_not_using_gui
fi

##########################################################

function main ()
{
    __pkgtools__at_function_enter main
 
    which decay0 >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	pkgtools__msg_error "Cannot find the Decay0 executable 'decay0' from genbb_help..."
	__pkgtools__at_function_exit
	return 1
    fi

    pkgtools__msg_notice "Running the Decay0 executable 'decay0' from genbb_help..."
    decay0

    __pkgtools__at_function_exit
    return 0
}

##########################################################

main 
if [ $? -ne 0 ]; then
    pkgtools__msg_error "Failure !"
    my_exit 1
fi
my_exit 0

# end of scripts/decay0
