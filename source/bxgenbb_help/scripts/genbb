#!/bin/bash
# -*- mode: shell-script; -*-

appname="genbb"
if [ "x${GENBB_HELP_ROOT}" = "x" ]; then
    echo "${appname}: ERROR: Missing 'GENBB_HELP_ROOT' environment variable ! Abort !" 1>&2
    exit 1
fi

system=$(genbb_help-config --system)

debug=0
config_file=
seed=
nevents=
output_file=
interactive=0

function usage ()
{
    cat<<EOF

genbb - generate primary particles using the GENBB library

Usage:

 Batch mode:

  genbb [-d|-h] <CONFIG FILE> [SEED] [NEVENTS] [OUTFILE]

    CONFIG FILE : see samples in the 'resources/' directory

    SEED        : seed for the random number generator (default is '${RANDOM}')

    NEVENTS     : number of events to be generated

    OUTFILE     : output file name

 Interactive mode:

  genbb

Example:

  genbb \${GENBB_HELP_ROOT}/resources/bipo212.conf 314159 100 /tmp/bipo212_out.genbb

EOF

}

while [ -n "$1" ]; do

    arg="$1"

    if [ "x${arg:0:1}" = "x-" ]; then

	if [ "${arg}" = "-d" -o "${arg}" = "--debug" ]; then
	    debug=1
	elif [ "${arg}" = "-h" -o "${arg}" = "--help" ]; then
	    usage
	    exit 2
	fi
    else
	if [ "x${config_file}" = "x" ]; then
	    config_file=${arg}
	elif [ "x${seed}" = "x" ]; then
	    seed=${arg}
	elif [ "x${nevents}" = "x" ]; then
	    nevents=${arg}
	elif [ "x${output_file}" = "x" ]; then
	    output_file=${arg}
	fi

    fi
    shift 1
done

if [ "x${config_file}" = "x" ]; then
    interactive=1
else
    if [ "x${seed}" = "x" ]; then
	seed=${RANDOM}
	echo "${appname}: NOTICE: Seed='${seed}' !" 1>&2
    fi
fi

BIN=${GENBB_HELP_ROOT}/${system}/bin/prog_genbb_1.f77.exe

tmp_dir=/tmp/${USER}/
if [ ! -d ${tmp_dir} ]; then
    mkdir -p ${tmp_dir}
fi
if [ ! -d ${tmp_dir} ]; then
    echo "${appname}: ERROR: Directory '${tmp_dir}' does not exist ! Abort !" 1>&2
    exit &
fi

if [ ${interactive} -eq 0 ]; then
    echo "${appname}: NOTICE: Batch mode..." 1>&2
    tmp_conf=$(mktemp -p ${tmp_dir} genbb_XXXXXX )
    echo "${appname}: NOTICE: Set 'seed'..." 1>&2
    echo "seed=${seed}" > ${tmp_conf}.1
    cat ${config_file} >> ${tmp_conf}.1
    if [ "x${nevents}" != "x" ]; then
	echo "${appname}: NOTICE: Set 'number-of-events'..." 1>&2
	cat ${tmp_conf}.1 | sed \
	    -e "s/^number-of-events=.*$/number-of-events=$nevents/g" \
	    > ${tmp_conf}.2
	mv -f ${tmp_conf}.2 ${tmp_conf}.1
    fi

    ###echo "${appname}: NOTICE: =====================" 1>&2

    if [ "x${output_file}" = "x" ]; then
	output_file="out.genbb"
    fi

    if [ "x${output_file}" != "x" ]; then
	out_ext=$(echo ${output_file} | tr '.' '\n' | tail -1)
	echo "${appname}: NOTICE: Output file has extension '${out_ext}'..." 1>&2
	if [ "x${out_ext}" != "xgenbb" ]; then
	    echo "${appname}: WARNING: Output file has not extension '.genbb'!" 1>&2
	fi
	echo "${appname}: NOTICE: Set 'output-file' to '${output_file}'..." 1>&2
	cat ${tmp_conf}.1 | sed \
	    -e "s@^output-file=.*@output-file=${output_file}@g" \
	    > ${tmp_conf}.2
	mv -f ${tmp_conf}.2 ${tmp_conf}.1
    fi
    cp -f ${tmp_conf}.1 ${tmp_conf}
    cat ${tmp_conf}
    cat ${tmp_conf} | cut -d'=' -f2 | ${BIN}
else
    echo "${appname}: NOTICE: Interactive mode..." 1>&2
    ${BIN}
fi

exit 0

# end