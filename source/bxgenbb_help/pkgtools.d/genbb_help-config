#!/usr/bin/env bash
# -*- mode: shell-script; -*-
# genbb_help-config
#
# Note:
#
# The following environment variables may be set to change 
# the behaviour of the genbb_help-config script:
#
# export GENBB_HELP_USING_CACHE_FILES=0
# export GENBB_HELP_USING_CACHE_FILES=1
#  will not/will use the cflags/ldflags cache accelerator files
#

opwd=$(pwd)
help=0

SCRIPTNAME="genbb_help-config"
THE_SYSTEM="$(uname -s)-$(uname -m | sed -e 's/ //g')"

THEPACK_ROOT=/usr/local
if [ -n "${GENBB_HELP_ROOT}" ]; then
    THEPACK_ROOT="${GENBB_HELP_ROOT}" 
else 
    echo "${SCRIPTNAME}: error: 'GENBB_HELP_ROOT' environment variable is not defined!" 
    exit 1
fi

PACK_CONF=${GENBB_HELP_ROOT}/.genbb_help.conf

THEPACK_INCLUDEDIR="${THEPACK_ROOT}/include" 

THEPACK_LIBDIR="${THEPACK_ROOT}/${THE_SYSTEM}/lib" 

THEPACK_BINDIR="${THEPACK_ROOT}/${THE_SYSTEM}/bin" 

THEPACK_VERSION="?"
if [ -f "${THEPACK_ROOT}/VERSION" ]; then
    THEPACK_VERSION="$(cat ${THEPACK_ROOT}/VERSION)"    
elif [ -f "${THEPACK_ROOT}/pkgtools.d/package.info"  ]; then
    version=$(cat ${THEPACK_ROOT}/pkgtools.d/package.info | grep "version=" | cut -d'=' -f2 )    
    THEPACK_VERSION=${version}
fi

using_cache_files=0 # default: do not use cache files 
if [ "x${GENBB_HELP_USING_CACHE_FILES}" != "x" ]; then
    if [ "x${GENBB_HELP_USING_CACHE_FILES}" = "x0" ]; then
	using_cache_files=0
    else
	using_cache_files=1
    fi
fi
cflags_cache=${THEPACK_ROOT}/.cflags.cache
ldflags_cache=${THEPACK_ROOT}/.ldflags.cache

### Notes:
###	"-lgfortran " 
###	"-lg2c "
f77_comp=$(cat ${PACK_CONF} | grep F77_COMP= | cut -d= -f2)

#>>> 2009-03-01 FM:
# Remove  -lg2c link option for we now use gfortran...
#<<<
f77_opt=-lgfortran
if [ "x${f77_comp}" = "xg77" ]; then
    f77_opt=-lg2c
fi

opt=$1

if [ "x$opt" = "x" ]; then
    echo "${SCRIPTNAME}: error: Missing option!" 
    help=1
fi

if [ "x$opt" = "x--help" -o "x$opt" = "x-h" -o "x$opt" = "x-?" ]; then
    help=1
fi

if [ $help -eq 1 ]; then
    cat<<EOF
Usage: $SCRIPTNAME [OPTION]

Known values for OPTION are:

  --prefix              show genbb_help installation prefix
  --incdir              print include directory
  --libdir              print library directory
  --bindir              print binary directory
  --include             print include path pre-processor flags without dependencies 
  --cflags              print include path pre-processor flags with dependencies
  --libs                print library linking information, without dependencies
  --ldflags             
  --libs-depends        print library linking information, with dependencies
  --help                print this help then exit
  --version             print version information
  --system              print system
  --clean-cache-files   clean compile/link cache files
  --check               check dependencies and setup

EOF
    exit 1
fi 

if [ "x$opt" = "x--system" ]; then
    echo "${THE_SYSTEM}"
    exit 0
fi 

if [ "x$opt" = "x--prefix" ]; then
    echo "${THEPACK_ROOT}"
    exit 0
fi 

if [ "x$opt" = "x--version" ]; then
    echo "${THEPACK_VERSION}"
    exit 0
fi 

if [ "x$opt" = "x--clean-cache-files" ]; then
    if [ -f ${cflags_cache} ]; then
	echo "${SCRIPTNAME}: NOTICE: Removing '${cflags_cache}' cache file !" >&2
	rm -f ${cflags_cache}
    fi
    if [ -f ${ldflags_cache} ]; then
	echo "${SCRIPTNAME}: NOTICE: Removing '${ldflags_cache}' cache file !" >&2
	rm -f ${ldflags_cache}
    fi
    exit 0
fi

if [ "x$opt" = "x--incdir" ]; then
    echo "${THEPACK_INCLUDEDIR}" 
    exit 0
fi

if [ "x$opt" = "x--include" ]; then
    echo "-I${THEPACK_INCLUDEDIR} " 
    exit 0
fi

if [ "x$opt" = "x--cflags" ]; then

    if [ "x${f77_comp}" = "xg77" ]; then
	f77_defines="\
-Df2cFortran \
-Dgenbbsub=genbbsub_ \
-Dset_random_seed=set_random_seed_ \
-Dgrndm=grndm_ \
-Dgenevent=genevent_ \
-Dgenbb_init_enrange=genbb_init_enrange_ \
-Denrange=enrange_\
"
    fi
    if [ "x${f77_comp}" = "xgfortran" ]; then
	f77_defines="\
-Df2cFortran \
-Dgenbbsub=genbbsub_ \
-Dset_random_seed=set_random_seed_ \
-Dgrndm=grndm_ \
-Dgenevent=genevent_ \
-Dgenbb_init_enrange=genbb_init_enrange_ \
-Denrange=enrange_ \
"
    fi
    ####
    shift 1
    more=$1
    if [ "x${more}" = "x--no-f77" ]; then
	f77_defines=
    fi
    ###

    generate_cflags=0
    if [ ${using_cache_files} -eq 1 ]; then
	if [ -f ${cflags_cache} ]; then
	    cat ${cflags_cache}
	    exit 0
	else
	    generate_cflags=1
	fi
    else
	generate_cflags=1
    fi

    if [ ${generate_cflags} -eq 1 ]; then
	(
	    (
		echo -n \
		    "-fPIC " \
		    "${f77_defines} " \
		    "-I${THEPACK_INCLUDEDIR} "  \
		    "`geomtools-config --cflags` "
	    ) | python ${THEPACK_ROOT}/pkgtools.d/mkuniqueflags.py	    
	) | tee ${cflags_cache}
	test ${using_cache_files} -eq 0 && rm -f ${cflags_cache}
    fi
    exit 0
fi

if [ "x$opt" = "x--libdir" ]; then
    echo "${THEPACK_LIBDIR}"
    exit 0
fi 

if [ "x$opt" = "x--bindir" ]; then
    echo "${THEPACK_BINDIR}"
    exit 0
fi 

if [ "x$opt" = "x--libs" ]; then
    echo "-L${THEPACK_LIBDIR} -lgenbb_help "
    exit 0
fi 

if [ "x$opt" = "x--libs-depends" -o "x$opt" = "x--ldflags" ]; then
    ####
    shift 1
    more=$1
    if [ "x${more}" = "x--no-f77" ]; then
	f77_opt=
    fi
    ###

    generate_ldflags=0
    if [ ${using_cache_files} -eq 1 ]; then
	if [ -f ${ldflags_cache} ]; then
	    cat ${ldflags_cache}
	    exit 0
	else
	    generate_ldflags=1
	fi
    else
	generate_ldflags=1
    fi

    if [ ${generate_ldflags} -eq 1 ]; then	
	(
	    (
		echo -n "-L${THEPACK_LIBDIR} -lgenbb_help "  \
		    "`geomtools-config --ldflags` "  \
		    "${f77_opt} "  \
		    "-lm "  
	    ) | python ${THEPACK_ROOT}/pkgtools.d/mkuniqueflags.py -r
	) | tee ${ldflags_cache}
	test ${using_cache_files} -eq 0 && rm -f ${ldflags_cache}
    fi
    exit 0
fi 

if [ "x$opt" = "x--check" ]; then
    cd ${THEPACK_ROOT}
    ${THEPACK_ROOT}/pkgtools.d/pkgtool check
    if [ $? -ne 0 ]; then
	echo "$SCRIPTNAME: error: Check procedure failed!" >&2
	cd ${opwd}
	exit 1
    fi
    cd ${opwd}
    exit 0
fi 

echo "$SCRIPTNAME: error: Unknown option!" 
$0 --help
exit 1

# end of genbb_help-config
