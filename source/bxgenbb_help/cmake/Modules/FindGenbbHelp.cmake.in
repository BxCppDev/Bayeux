# FindGenbbHelp.cmake
# 
# A rather brute force version.
# 
# Locate genbb_help library
# This module defines
#  GENBB_HELP_FOUND
#  GENBB_HELP_VERSION
#  GENBB_HELP_LIBRARIES
#  GENBB_HELP_INCLUDE_DIRS, where to find genbb_help/genbb_help_config.h
#  GENBB_HELP_LIBRARIES_DEPEND
#  GENBB_HELP_INCLUDE_DIRS_DEPEND
# and 
#  GENBB_HELP_WITH_BIO if Boost I/O support is activated
#  GENBB_HELP_WITH_PYTHON_WRAPPER if Boost Python wrapper support is activated

set ( __bio_support 1 )
set ( __python_wrapper_support 0 )

set ( GENBB_HELP_VERSION  @genbb_help_VERSION_STR@ CACHE STRING "genbb_help version" )

if ( __python_wrapper_support )
   set ( GENBB_HELP_WITH_PYTHON_WRAPPER  @GENBB_HELP_WITH_PYTHON_WRAPPER@ CACHE STRING "Python wrapper flag" )
endif ()

if ( __bio_support )
  set ( GENBB_HELP_WITH_BIO             @GENBB_HELP_WITH_BIO@  "Boost I/O DLL flag" )
endif ()

message ( STATUS "FindGenbbHelp: GENBB_HELP_VERSION='${GENBB_HELP_VERSION}'" )

if ( __bio_support )
  message ( STATUS "FindGenbbHelp: GENBB_HELP_WITH_BIO='${GENBB_HELP_WITH_BIO}'" )
endif ()

if ( __python_wrapper_support )
  message ( STATUS "FindGenbbHelp: GENBB_HELP_WITH_PYTHON_WRAPPER='${GENBB_HELP_WITH_PYTHON_WRAPPER}'" )
endif ()

find_path ( GENBB_HELP_INCLUDE_DIRS genbb_help/genbb_help_config.h
  HINTS
  $ENV{GENBB_HELP_ROOT_DIR}
  PATH_SUFFIXES include
  PATHS
  [HKEY_LOCAL_MACHINE\\SOFTWARE\\genbb_help]
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw # Fink
  /opt/local # DarwinPorts
  /opt/csw # Blastwave
  /opt
)

message ( STATUS "FindGenbbHelp: GENBB_HELP_INCLUDE_DIRS='${GENBB_HELP_INCLUDE_DIRS}'" )

find_library ( _genbb_help_library 
  NAMES genbb_help
  HINTS $ENV{GENBB_HELP_ROOT_DIR}
  PATHS
  [HKEY_LOCAL_MACHINE\\SOFTWARE\\genbb_help]
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw
  /opt/local
  /opt/csw
  /opt
  PATH_SUFFIXES lib64 lib
)
message ( STATUS "FindGenbbHelp: GENBB_HELP_LIBRARY='${GENBB_HELP_LIBRARY}'" )
set ( _genbb_help_libraries "${_genbb_help_library}" )

if ( __bio_support )
  if ( ${GENBB_HELP_WITH_BIO} )
    find_library ( _genbb_help_bio_library 
      NAMES genbb_help_bio
      HINTS $ENV{GENBB_HELP_ROOT_DIR}
      PATHS
      [HKEY_LOCAL_MACHINE\\SOFTWARE\\genbb_help]
      ~/Library/Frameworks
      /Library/Frameworks
      /usr/local
      /usr
      /sw
      /opt/local
      /opt/csw
      /opt
      PATH_SUFFIXES lib64 lib
      )
     message ( STATUS "FindGenbbHelp: _genbb_help_bio_library='${_genbb_help_bio_library}'" )
     if ( NOT "${_genbb_help_bio_library}" STREQUAL "" )
       set ( _genbb_help_libraries "${_genbb_help_bio_library}" "${_genbb_help_library}" )
       message ( STATUS "FindGenbbHelp: _genbb_help_libraries='${_genbb_help_libraries}'" )
    endif ()
  endif ()
endif ()

set ( GENBB_HELP_LIBRARIES ${_genbb_help_libraries} )
message ( STATUS "FindGenbbHelp: GENBB_HELP_LIBRARIES='${GENBB_HELP_LIBRARIES}'" )

include ( FindPackageHandleStandardArgs )
# handle the QUIETLY and REQUIRED arguments and set GENBB_HELP_FOUND to TRUE if 
# all listed variables are TRUE
find_package_handle_standard_args ( genbb_help DEFAULT_MSG GENBB_HELP_LIBRARIES GENBB_HELP_INCLUDE_DIRS )

set ( GENBB_HELP_LIBRARIES_DEPEND 
      ${GENBB_HELP_LIBRARIES}
      @GEOMTOOLS_LIBRARIES_DEPEND@
    )

message ( STATUS "FindGenbbHelp: GENBB_HELP_LIBRARIES_DEPEND='${GENBB_HELP_LIBRARIES_DEPEND}'" )

# if (GENBB_HELP_WITH_PYTHON_WRAPPER)
#   list ( APPEND GENBB_HELP_LIBRARIES_DEPEND 
#          python )
# endif ()

set ( GENBB_HELP_INCLUDE_DIRS_DEPEND
      ${GENBB_HELP_INCLUDE_DIRS}
      @GEOMTOOLS_INCLUDE_DIRS_DEPEND@
    )

message ( STATUS "FindGenbbHelp: GENBB_HELP_INCLUDE_DIRS_DEPEND='${GENBB_HELP_INCLUDE_DIRS_DEPEND}'" )

mark_as_advanced (GENBB_HELP_VERSION  
                  GENBB_HELP_LIBRARY
		  GENBB_HELP_INCLUDE_DIRS 
                  GENBB_HELP_LIBRARIES 
		  GENBB_HELP_INCLUDE_DIRS_DEPEND 
                  GENBB_HELP_LIBRARIES_DEPEND 
		  )

if ( __bio_support )
  mark_as_advanced ( GENBB_HELP_WITH_BIO )  
endif ()

if ( __python_wrapper_support )
  mark_as_advanced ( GENBB_HELP_WITH_PYTHON_WRAPPER )  
endif ()

message ( STATUS "FindGenbbHelp: GENBB_HELP_FOUND=${GENBB_HELP_FOUND}")

# end of FindGenbbHelp.cmake

