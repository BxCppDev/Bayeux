#!/usr/bin/env bash
# -*- mode: shell-script; -*-
# genbb_help-config
# Author: F. Mauger <mauger@lpccaen.in2p3.fr>
#

script_name="genbb_help-config"

opwd=$(pwd)
help=0
debug=0

function my_exit ()
{
    cd ${opwd}
    exit $1
}

genbb_help_system="@CMAKE_SYSTEM_NAME@-@CMAKE_SYSTEM_PROCESSOR@"

genbb_help_root="@CMAKE_INSTALL_PREFIX@"

genbb_help_bin_dir="${genbb_help_root}/@CMAKE_INSTALL_BINDIR@"

genbb_help_lib_dir="${genbb_help_root}/@CMAKE_INSTALL_LIBDIR@"

genbb_help_etc_dir="${genbb_help_root}/@CMAKE_INSTALL_ETCDIR@"

genbb_help_doc_dir="${genbb_help_root}/@CMAKE_INSTALL_DOCDIR@"

genbb_help_include_dir="${genbb_help_root}/@CMAKE_INSTALL_INCLUDEDIR@"

genbb_help_data_dir="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@"

genbb_help_cmake_config_dir="@CMAKE_INSTALL_PREFIX@/@_genbb_help_cmake_config_install_dir@"

genbb_help_version=@genbb_help_VERSION@

with_debug=0
if [ "x@GENBB_HELP_WITH_DEBUG@" == "x1" -o "x@GENBB_HELP_WITH_DEBUG@" == "xON" ]; then
    with_debug=1
fi

with_bio=0
if [ "x@GENBB_HELP_WITH_BIO@" == "x1" -o "x@GENBB_HELP_WITH_BIO@" == "xON" ]; then
    with_bio=1
fi

with_reflection=0
if [ "x@GENBB_HELP_WITH_REFLECTION@" == "x1" -o "x@GENBB_HELP_WITH_REFLECTION@" == "xON" ]; then
    with_reflection=1
fi

with_fortran=0
if [ "x@GENBB_HELP_WITH_FORTRAN@" == "x1" -o "x@GENBB_HELP_WITH_FORTRAN@" == "xON" ]; then
    with_fortran=1
fi

option="$1"
shift 1

if [ "x${option}" = "x" ]; then
    echo "ERROR: ${script_name}: Missing option ! Abort !" 1>&2
    help=1
fi

if [ "x${option}" = "x--help" -o "x${option}" = "x-h" -o "x${option}" = "x-?" ]; then
    help=1
fi

function print_help ()
{
    cat<<EOF
Usage: ${script_name} [OPTIONS]

Known values for OPTION are:

  --help                print this help then exit
  --version             print version information
  --system              print system
  --prefix              print genbb_help installation prefix
  --bindir              print binary directory
  --libdir              print library directory
  --incdir              print include directory
  --datadir             print data/resources base directory
  --docdir              print documentation base directory
  --etcdir              print configuration base directory
  --include             print include path pre-processor flags without dependencies
  --cflags              print include path pre-processor flags with dependencies
  --libs    [option]    print library linking information, without dependencies
  --ldflags [option]
    Options:
    --relative-path     use relative DLL path (default)
    --absolute-path     use absolute DLL path
    --with-bio          with linkage against the 'libgenbb_help_bio@CMAKE_SHARED_LIBRARY_SUFFIX@' DLL (default)
    --without-bio       without linkage against the 'libgenbb_help_bio@CMAKE_SHARED_LIBRARY_SUFFIX@' DLL
  --with-bio            print if Boost/Serialization binary code is pre-built
                        in an auxiliary shared library
  --with-debug          print if genbb_help has been compiled in 'debug' mode
  --cmake-config-dir    print the installation directory for the 'genbb_help-config.cmake' file

EOF

  #   --with-reflection    with linkage against the 'libgenbb_help_reflection@CMAKE_SHARED_LIBRARY_SUFFIX@' DLL (default)
  #   --without-reflection without linkage against the 'libgenbb_help_reflection@CMAKE_SHARED_LIBRARY_SUFFIX@' DLL
  #   return 0
  # --with-reflection     print if CAMP-based reflection binary code is pre-built
  #                       in an auxiliary shared library
    return 0
}

if [ ${help} -eq 1 ]; then
    print_help
    my_exit 1
fi

if [ "x${option}" = "x--system" ]; then
    echo "${genbb_help_system}"
    my_exit 0
fi

if [ "x${option}" = "x--prefix" ]; then
    echo "${genbb_help_root}"
    my_exit 0
fi

if [ "x${option}" = "x--version" ]; then
    echo "${genbb_help_version}"
    my_exit 0
fi

if [ "x${option}" = "x--incdir" ]; then
    echo "${genbb_help_include_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--datadir" ]; then
    echo "${genbb_help_data_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--etcdir" ]; then
    echo "${genbb_help_etc_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--docdir" ]; then
    echo "${genbb_help_doc_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--cmake-config-dir" ]; then
    echo "${genbb_help_cmake_config_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--include" ]; then
    echo "-I${genbb_help_include_dir} "
    my_exit 0
fi

if [ "x${option}" = "x--cflags" ]; then
    (
	echo -n "-fPIC "
	echo -n "-I${genbb_help_include_dir} "
        echo -n "`geomtools-config --cflags` "
	if [ ${with_reflection} -eq 1 ]; then
 	    echo -n "`camp-config --cflags` "
	fi
	echo ""
    ) ###| python @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@/pkgtools/mkuniqueflags.py
    my_exit 0
fi

if [ "x${option}" = "x--libdir" ]; then
    echo "${genbb_help_lib_dir}"
    my_exit 0
fi

if [ "x${option}" = "x--bindir" ]; then
    echo "${genbb_help_bin_dir}"
    my_exit 0
fi

# compute default linkage :
bio_ldflags=
bio_ldflags_abs=
if [ ${with_bio} -eq 1 ]; then
    bio_ldflags=-lgenbb_help_bio
    bio_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_bio@CMAKE_SHARED_LIBRARY_SUFFIX@
fi

reflection_ldflags=
reflection_ldflags_abs=
if [ ${with_reflection} -eq 1 ]; then
    reflection_ldflags=-lgenbb_help_reflection
    reflection_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_reflection@CMAKE_SHARED_LIBRARY_SUFFIX@
fi

decay0_fortran_ldflags=
decay0_fortran_ldflags_abs=
if [ ${with_fortran} -eq 1 ]; then
    decay0_fortran_ldflags=-lgenbb_help_decay0_fortran
    decay0_fortran_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_decay0_fortran@CMAKE_SHARED_LIBRARY_SUFFIX@
fi

ldflags_abs_path=0
if [ "x${GENBB_HELP_LDFLAGS_ABSOLUTE_PATH}" = "x1" ]; then
    ldflags_abs_path=1
fi
if [ "x${option}" = "x--libs" -o "x${option}" = "x--ldflags" ]; then
    while [ -n "$1" ]; do
	lib_option="$1"
	if [ "x${lib_option}" = "x--without-bio" ]; then
	    bio_ldflags=
	    bio_ldflags_abs=
	elif [ "x${lib_option}" = "x--with-bio" -a ${with_bio} -eq 1 ]; then
	    bio_ldflags=-lgenbb_help_bio
	    bio_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_bio@CMAKE_SHARED_LIBRARY_SUFFIX@
	# elif [ "x${lib_option}" = "x--without-fortran" ]; then
	#     decay0_fortran_ldflags=
	#     decay0_fortran_ldflags_abs=
	# elif [ "x${lib_option}" = "x--with-fortran" -a ${with_fortran} -eq 1 ]; then
	#     decay0_fortran_ldflags=-lgenbb_help_decay0_fortran
	#     decay0_fortran_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_decay0_fortran@CMAKE_SHARED_LIBRARY_SUFFIX@
	elif [ "x${lib_option}" = "x--without-reflection" ]; then
	    reflection_ldflags=
	    reflection_ldflags_abs=
	elif [ "x${lib_option}" = "x--with-reflection" -a ${with_reflection} -eq 1 ]; then
	    reflection_ldflags=-lgenbb_help_reflection
	    reflection_ldflags_abs=${genbb_help_lib_dir}/libgenbb_help_reflection@CMAKE_SHARED_LIBRARY_SUFFIX@
	elif [ "x${lib_option}" = "x--absolute-path" ]; then
	    ldflags_abs_path=1
	elif [ "x${lib_option}" = "x--relative-path" ]; then
	    ldflags_abs_path=0
	fi
	shift 1
    done
fi
ldflags_abs_path_option=
if [ ${ldflags_abs_path} -eq 1 ]; then
    ldflags_abs_path_option=--absolute-path
fi

if [ "x${option}" = "x--libs" ]; then
    if [ ${ldflags_abs_path} -eq 1 ]; then
	echo -n "${reflection_ldflags_abs} "
	echo -n "${bio_ldflags_abs} "
	echo -n "${genbb_help_lib_dir}/libgenbb_help@CMAKE_SHARED_LIBRARY_SUFFIX@ "
    else
	echo -n "-L${genbb_help_lib_dir} "
	echo -n "${reflection_ldflags} "
	echo -n "${bio_ldflags} "
	echo -n "-lgenbb_help "
    fi
    echo
    my_exit 0
fi

if [ "x${option}" = "x--ldflags" ]; then
    (
	if [ ${ldflags_abs_path} -eq 1 ]; then
	    echo -n "${reflection_ldflags_abs} "
	    echo -n "${bio_ldflags_abs} "
	    echo -n "${genbb_help_lib_dir}/libgenbb_help@CMAKE_SHARED_LIBRARY_SUFFIX@ "
	else
	    echo -n "-L${genbb_help_lib_dir} "
	    echo -n "${reflection_ldflags} "
	    echo -n "${bio_ldflags} "
	    echo -n "-lgenbb_help "
	fi
        echo -n "`geomtools-config --ldflags ${ldflags_abs_path_option}` "
	if [ ${with_reflection} -eq 1 ]; then
 	    echo -n "`camp-config --ldflags` "
	fi
	echo -n "-ldl "
	echo ""
    ) ###| python @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@/pkgtools/mkuniqueflags.py -r
    my_exit 0
fi

if [ "x${option}" = "x--with-debug" ]; then
    echo "${with_debug}"
    if [ "${with_debug}" = "1" ]; then
	my_exit 0
    else
	my_exit 1
    fi
fi

if [ "x${option}" = "x--with-bio" ]; then
    echo "${with_bio}"
    if [ "${with_bio}" = "1" ]; then
	my_exit 0
    else
	my_exit 1
    fi
fi

if [ "x${option}" = "x--with-reflection" ]; then
    echo "${with_reflection}"
    if [ "${with_reflection}" = "1" ]; then
	my_exit 0
    else
	my_exit 1
    fi
fi

echo "ERROR: ${script_name}: Unknown option !" 1>&2
print_help
my_exit 1

# end of genbb_help-config
