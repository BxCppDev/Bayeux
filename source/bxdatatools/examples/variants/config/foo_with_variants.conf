# -*- mode: conf-unix -*-
# Format : datatools::properties

#@config The configuration parameters for a given application


###  Core config ###

#@description The logging priority of the core application
# The 'logging' property is extracted from the 'core:logging' variant parameter
# described in the 'code' variant registry if
# it is available. If not it fallbacks to the "fatal" value.
logging   : string = @variant(core:logging|"fatal")

#@description The operator of the core application
# The  'operator'  property  is  extracted  from  the  'core:operator'
# variant parameter ('code'  variant registry) if it  is available and
# fallbacks to "Visitor" if not:
operator  : string = @variant(core:operator|"Visitor")

#@description The help mode of the core application
# The 'help_mode'  property is extracted from  the 'core:help' variant
# parameter ('code' variant registry) if it is available and fallbacks
# to "OnlyTooltips" if not:
help_mode : string = @variant(core:help|"OnlyTooltips")

#@description The help mode of the core application
# The   'full_help.manpage'    property   is   extracted    from   the
# 'core:help/if_full_help/manpage'   variant   parameter  if   it   is
# available and  fallbacks to "${HOME}/app/man/man1/foo.1.gz"  if not.
# It is  only taken  into account  if the  'core:help/if_full_help' is
# activated, i.e.  if  the above 'help_mode' property has  been set to
# "FullHelp".
#@variant_only core:help/if_full_help|false
full_help.manpage : string as path = \
  @variant(core:help/if_full_help/manpage|"${HOME}/app/man/man1/foo.1.gz")

#@description The help mode of the core application
# The       'full_help.url'      property       is      fixed       to
# "http://foo.org/documentation/user_guide.html".   It  is only  taken
# into account  if the 'core:help/if_full_help' variant  is activated,
# i.e.  if the above 'help_mode' property has been set to "FullHelp".
#@variant_only core:help/if_full_help|false
full_help.url     : string as path = "http://foo.org/documentation/user_guide.html"

#@description The active flag for the GUI
# The 'gui' property is extracted from the 'core:gui' variant parameter
# if it is available ('core' variant registry) and fallbacks to "false" if not:
gui       : boolean = @variant(core:gui|false)

#@description The active flag for the plugin
#@variant_only gui:color/is_colored|false
plugin    : boolean = @variant(core:plugin|false)

# Open a variant conditional block:
#@variant_if core:test1/is_on|false

#@description The test A level
test.A.level : integer = 2

#@description The test A logging
test.A.logging : string = "debug"

# Open another variant conditional block:
#@variant_if core:test2/is_on|false

#@description The test X threshold
test.X.threshold : real as electric_potential = 3 mV

#@description The test time gate
test.X.time_gate : real as time = 100 ns

# Close the current variant conditional block:
#@variant_endif core:test2/is_on

#@description The test B dummy
test.B.dummy : string = "dummy"

# Open another variant conditional block:
#@variant_if core:test3/is_on|false

#@description The test C foo
test.C.foo : string = "foo"

# Close the current variant conditional block:
#@variant_endif core:test3/is_on

# Close the current variant conditional block:
#@variant_endif core:test1/is_on

### Algo config ###

#@description The logging priority of for the embedded algorithm
algo.logging  : string = "fatal" # no variant

#@description The computation time limit
algo.max_time : real as time = @variant(algo:max_time|1.0 second)

#@description The running mode
algo.mode     : string = "fast"  # no variant

#@description The accuracy order
# The 'algo.accuracy'  property is extracted from  the 'algo:accuracy'
# variant parameter if it is available and fallbacks to '3' if not.
algo.accuracy : integer = @variant(algo:accuracy|3)

#@description The number of events to be processed by the embedded algorithm
# The   'algo.number_of_events'  property   is   extracted  from   the
# 'algo:nevents' variant parameter if it is available and fallbacks to
# "1000" if not:
algo.nevents  : integer = @variant(algo:nevents|10)


### GUI config ###

#@description The logging priority of for the GUI
gui.logging       : string = "fatal" # no variant

#@description The antialiasing flag for the GUI
gui.antialiasing  : boolean = true # no variant

#@description The color flag for the GUI
# The 'gui.color'  property is extracted from  the 'gui:color' variant
# parameter if it is available  ('gui' variant registry) and fallbacks
# to 'false' if not.
gui.color         : boolean = @variant(gui:color|false)

#@description The color palette id for the GUI
# The   'gui.color.palette'    property   is   extracted    from   the
# 'gui:color/is_colored/palette' variant parameter if it is available and
# fallbacks  to '0'  if not.   It is  only taken  into account  if the
# 'gui:color/is_colored'  is activated,  i.e.  if  the above  'gui.color'
# property has been set to 'true'.
#@variant_only gui:color/is_colored|false
gui.color.palette : integer = @variant(gui:color/is_colored/palette|0)

#@description The foreground color for the GUI
# The 'gui.color.foreground' property is fixed  to "blue".  It is only
# taken into account if  the 'gui:color/is_colored' variant is activated,
# i.e.  if the above 'gui.color' property has been set to "true".
#@variant_only gui:color/is_colored|false
gui.color.foreground : string = "blue"

#@description The background color for the GUI
# The 'gui.color.background' property is fixed to "light_gray".  It is
# only  taken  into  account  if the  'gui:color/is_colored'  variant  is
# activated, i.e.  if  the above 'gui.color' property has  been set to
# "true".
#@variant_only gui:color/is_colored|false
gui.color.background : string = "light_gray"

#@description The B/W mode for the GUI
# The  'gui.bw.mode' property  is fixed  to "GrayScale".   It is  only
# taken  into  account  if  the  'gui:color/is_uncolored' variant  is
# activated, i.e.  if  the above 'gui.color' property has  been set to
# "false".
#@variant_only gui:color/is_uncolored|true
gui.bw.mode       : string = "GrayScale"


###  Plugin config ###

#@description The logging priority of the plugin
#@variant_only gui:color/is_colored|false
plugin.logging : string = "fatal" # no variant

#@description The dummy parameter for the plugin
#@variant_only gui:color/is_colored|false
plugin.dummy   : integer = 666


# End of list of configuration properties (datatools::properties).
