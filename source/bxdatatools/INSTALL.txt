
datatools installation instructions:
------------------------------------

The datatools C++ library package uses the CMake build system.

It depends on the following third-party software :
- CMake >= 2.8
- doxygen
- a C++ compiler (typically g++ but clang will be supported in a near future)

And from the Cadfael aggregator package :
  - Boost >= 1.47
  - CLHEP >= 2.1
  - CAMP  >= 0.7.1

datatools is a component of the Bayeux aggregator meta-package. It should be installed
through Bayeux. See: https://nemo.lpc-caen.in2p3.fr/wiki/Bayeux .

1 - Third-party software setup :
--------------------------------

CLHEP, Boost and CAMP libraries must be installed and setup first.

Please check the Cadfael home page at : https://nemo.lpc-caen.in2p3.fr/wiki/Cadfael .


2- Plain CMake installation :
-----------------------------

Change to the datatools base directory :
{{{
bash$ cd <datatools base dir>
}}}

Create a '__build' directory :
{{{
bash$ mkdir __build
bash$ cd __build
}}}

Configure the installation to the '<datatools installation base directory> directory.
Note: you must choose a directory where ou have write access.

{{{
bash$ cmake \
   -DCMAKE_INSTALL_PREFIX:PATH=<datatools installation base directory> \
   -DCMAKE_BUILD_TYPE:STRING=Release \
   -DCMAKE_MODULE_PATH=<Cadfael share directory>/cmake/Modules \
   -DDATATOOLS_WITH_BIO=1 \
   -DDATATOOLS_WITH_DOC=1 \
   -DDATATOOLS_WITH_TEST=1
   ..
}}}

This prints :
{{{
-- The C compiler identification is GNU
-- The CXX compiler identification is GNU

...

-- Configuring done
-- Generating done
-- Build files have been written to: <datatools source base dir>/__build
}}}

Build :
{{{
bash$ make
...
}}}

Generate the documentation :
{{{
bash$ make doc
...
}}}

Perform tests :
{{{
bash$ make test
...
}}}

Clean test material :
{{{
bash$ make clean_test
...
}}}

Installation (here in the '<datatools installation base directory>' directory) :
{{{
bash$ make install
...
}}}

Remove the temporary build directory :
{{{
bash$ cd ..
bash$ rm -fr __build
}}}


3 - Installation through the 'pkgtool' wrapper script :
-------------------------------------------------------

Change to the datatools base directory :
{{{
bash$ cd <datatools base dir>
}}}

Getting help :
{{{
bash$ ./pkgtools.d/pkgtool --help
}}}

Run the following configure/build/install sequence :
{{{
bash$ ./pkgtools.d/pkgtool check
bash$ ./pkgtools.d/pkgtool configure --install-prefix "<datatools_installation_base_directory>"
bash$ ./pkgtools.d/pkgtool build [--number-of-tasks auto]
bash$ ./pkgtools.d/pkgtool doc
bash$ ./pkgtools.d/pkgtool test
bash$ ./pkgtools.d/pkgtool install
}}}

De-installation :
{{{
bash$ ./pkgtools.d/pkgtool uninstall
}}}

Full reset of the package :
{{{
bash$ ./pkgtools.d/pkgtool reset
}}}


4 - Setup :
-----------

Load the definition of the datatools setup function :
{{{
bash$ source <datatools_installation_base_directory>/etc/datatools_setup.sh
NOTICE: do_datatools_setup: Please setup 'datatools' with 'do_datatools_setup'.
}}}

Invoke the setup function :
{{{
bash$ do_datatools_setup
NOTICE: do_datatools_setup: Setup datatools...
NOTICE: do_datatools_setup: Setup datatools done.
}}}

Use datatools :
{{{
bash$ which datatools-config
<datatools_installation_base_directory>/bin/datatools-config
bash$ datatools-config --version
5.0.0
bash$ datatools-config --cflags
...
bash$ datatools-config --ldflags
...
}}}

--
F.Mauger <mauger@lpccaen.in2p3.fr>
Updated: 2013-04-22






