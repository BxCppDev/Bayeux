README
------

The `test_nonfinite_num_facets_1.cpp' sample  program must be compiled
and  linked  against the  Boost/Serialization  library.   It uses  the
`nonfinite_num_facets.hpp'  header  file  from the  original  Floating
Point Utility library (extracted from the `Math -- Numeric' section of
the Boost vault).

The original `boost/math/nonfinite_num_facets.hpp'  header can also be
found at:

  https://svn.boost.org/svn/boost/sandbox/SCons/boost/spirit/home/support/detail/math/nonfinite_num_facets.hpp

Note  it is not  part of  the Spirit  source tree  (I don't  know the
reason why).

The  original  Floating  Point   Utility  library  also  provides  the
`fpclassify.hpp'   and  `signbit.hpp'   files.   However,   note  that
`fpclassify.hpp' and `signbit.hpp' are  now part of the Boost library.
So  with a  recent version  of  Boost, you  only need  to install  the
`boost/math/nonfinite_num_facets.hpp' file which  is not integrated in
Boost (as far as I know).

The  `boost/math/nonfinite_num_facets.hpp' file  provided  within this
zip  file   has  been  modified   to  use  the  official   release  of
`fpclassify.hpp' and `signbit.hpp' (in the Spirit path).

The  `reference' directory  contains some  copy of  the  archive files
generated by the executable as well as its redirected terminal output.

I have  compiled the `test_nonfinite_num_facets_1.cpp'  sample program
from  the directory  where you  found  this README  file using  (Linux
shell):

shell>  g++  -I. $(boost-config --cflags) \
          test_nonfinite_num_facets_1.cpp \
          $(boost-config --ldflags serialization) \
          -o test_nonfinite_num_facets_1.exe

where `boost-config' is  a home-made script which is  not available in
the standard  Boost distribution (however such script  should !).  You
will have to adapt your own command to build the executable, depending
on your system.

Comments, fixes and suggestions are welcome at : <mauger@lpccaen.in2p3.fr>

--
Francois Mauger
Updated : 2011-04-02