# -*- mode: conf-unix; -*-
# List of multi-properties (datatools::multi_properties):

#@description Rules that define a list of electro-magnetic fields
#@key_label   "name"
#@meta_label  "type"


##################################################
[name="E0" type="emfield::uniform_electric_field"]
electric_field.unit            : string  = "V/m"
electric_field.magnitude       : real    = 0.75
electric_field.axis            : string  = "z"
electric_field.can_be_combined : boolean = 1


##################################################
[name="E1" type="emfield::uniform_electric_field"]
electric_field.unit            : string  = "V/m"
electric_field.coordinates     : real[3] = 1.5 0.25 0.5
electric_field.can_be_combined : boolean = 1


##################################################
[name="E2" type="emfield::uniform_electric_field"]
electric_field.unit            : string  = "V/m"
electric_field.magnitude       : real    = 1.25
electric_field.axis            : string  = "x"
electric_field.can_be_combined : boolean = 1


##################################################
[name="B0" type="emfield::uniform_magnetic_field"]
magnetic_field.unit            : string  = "gauss"
magnetic_field.coordinates     : real[3] = 0.0 0.0 1.0


##################################################
[name="B1" type="emfield::uniform_magnetic_field"]
magnetic_field.unit            : string  = "gauss"
magnetic_field.coordinates     : real[3] = 1.0 0.0 0.0


##################################################
[name="B2" type="emfield::uniform_magnetic_field"]
magnetic_field.unit            : string  = "gauss"
magnetic_field.coordinates     : real[3] = 0.0 -1.0 0.0


##############################################################
[name="E0+2*E1-3*B0" type="emfield::linear_combination_field"]

combined_fields.labels  : string[3] = "a" "b" "c"

combined_fields.a.name   : string = "E0"
combined_fields.a.weight : real   = +1.0

combined_fields.b.name   : string = "E1"
combined_fields.b.weight : real   = +2.0

combined_fields.c.name   : string = "B0"
combined_fields.c.weight : real   = -3.0
combined_fields.c.force_combined : boolean = 1


##############################################
[name="~E0" type="emfield::oscillating_field"]
field.name     : string = "E0"
phase.unit     : string = "degree"
phase          : real   = 45
frequency.unit : string = "kHz"
frequency      : real   = 10.0


##############################################
[name="~E2" type="emfield::oscillating_field"]
field.name     : string = "E2"
phase.unit     : string = "degree"
phase          : real   = 75
frequency.unit : string = "kHz"
frequency      : real   = 8.0


#########################################################
[name="~E0+~E2" type="emfield::linear_combination_field"]

combined_fields.labels  : string[2] = "Ea" "Eb"

combined_fields.Ea.name   : string = "~E0"
combined_fields.Ea.weight : real   = +1.0
combined_fields.Ea.force_combined : boolean = 1

combined_fields.Eb.name   : string = "~E2"
combined_fields.Eb.weight : real   = +1.0
combined_fields.Eb.force_combined : boolean = 1


######################################################
[name="B_earth" type="emfield::uniform_magnetic_field"]
magnetic_field.unit            : string  = "gauss"
magnetic_field.coordinates     : real[3] = 0.0 0.0 0.5


######################################################
[name="B_coil" type="emfield::uniform_magnetic_field"]
magnetic_field.unit            : string  = "gauss"
magnetic_field.coordinates     : real[3] = 0.0 2.0 0.0


################################################################
[name="B_earth+B_coil" type="emfield::linear_combination_field"]

combined_fields.labels  : string[2] = "B1" "B2"

combined_fields.B1.name   : string = "B_earth"
combined_fields.B1.weight : real   = +1.0
combined_fields.B1.force_combined : boolean = 1

combined_fields.B2.name   : string = "B_coil"
combined_fields.B2.weight : real   = +1.0
combined_fields.B2.force_combined : boolean = 1


######################################################
# This field model is used when a field is evaluated
# by regions/zones of arbitrary shapes and positions.
[name="B_multi_zone" type="emfield::multi_zone_field"]

# Embedded shape factory
shape_factory.logging.priority : string = "debug"
shape_factory.shapes_files     : string[1] as path = "${CONFIG_DIR}/fields/shapes.def"

# List of zones to be associated to a particular field
zones : string[3] = "A" "B" "C"

# Zone A:
zones.A.positioning : string  = "+1.0 0.0 0.0 (m) / y 90 (degree)"
zones.A.tolerance   : real as length  = 0.1 cm
zones.A.absolute    : boolean = true
zones.A.field       : string  = "B1"
zones.A.shape_ref   : string  = "ShapeA"
zones.A.priority    : string  = "low"

# Zone B has a higher priority than A. This means that
# for any point in the overlapping region, we will use
# the only field computed from the B field model.

# Zone B:
zones.B.positioning : string  = "0.0 0.0 0.0 (m)"
zones.B.tolerance   : real as length  = 0.1 cm
zones.B.absolute    : boolean = true
zones.B.field       : string  = "B0"
zones.B.shape_ref   : string  = "ShapeB"
zones.B.priority    : string  = "high"

# Zone C:
zones.C.positioning : string  = "0.0 +1.0 0.0 (m)"
zones.C.tolerance   : real as length = 0.1 cm
zones.C.absolute    : boolean = true
zones.C.field       : string  = "B2"
zones.C.shape_ref   : string  = "ShapeC"
zones.C.priority    : string  = "high"

# Zone B and C have the same priority; This means that
# for any point in the overlapping region, we will use
# the mean field computed from both B and C field models.

# End of list of multi-properties.
