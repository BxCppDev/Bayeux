# -*- mode : shell-script; -*-
# emfield_setup.sh

function do_emfield_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${EMFIELD_ROOT}" != "x" ]; then
	echo "${indent}Current emfield setup is :" 1>&2
	echo "${indent}EMFIELD_ROOT                = '${EMFIELD_ROOT}'" 1>&2
	echo "${indent}EMFIELD_NAME                = '${EMFIELD_NAME}'" 1>&2
	echo "${indent}EMFIELD_VERSION             = '${EMFIELD_VERSION}'" 1>&2
	echo "${indent}EMFIELD_WITH_DEBUG          = ${EMFIELD_WITH_DEBUG}" 1>&2
	# echo "${indent}EMFIELD_WITH_BIO            = ${EMFIELD_WITH_BIO}" 1>&2
	# echo "${indent}EMFIELD_WITH_REFLECTION     = ${EMFIELD_WITH_REFLECTION}" 1>&2
	echo "${indent}EMFIELD_BIN_DIR             = '${EMFIELD_BIN_DIR}'"
	echo "${indent}EMFIELD_ETC_DIR             = '${EMFIELD_ETC_DIR}'"
	echo "${indent}EMFIELD_LIB_DIR             = '${EMFIELD_LIB_DIR}'"
	echo "${indent}EMFIELD_DOC_DIR             = '${EMFIELD_DOC_DIR}'"
	echo "${indent}EMFIELD_INCLUDE_DIR         = '${EMFIELD_INCLUDE_DIR}'"
	echo "${indent}EMFIELD_CMAKE_CONFIG_DIR    = '${EMFIELD_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}EMFIELD_DATA_DIR            = '${EMFIELD_DATA_DIR}'" 1>&2
    else
	echo "${indent}emfield is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_emfield_print_info
alias emfield_print_info='do_emfield_print_info'

function do_emfield_setup ()
{
    local verbose=0
    
    while [ -n "$1" ]; do
	if [ "$1" = "--verbose" -o "$1" = "-v" ]; then
	  let verbose=verbose+1
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_emfield_setup: Setup emfield..." 1>&2
    fi

    if [ "x${EMFIELD_ROOT}" != "x" ]; then
	echo "WARNING: do_emfield_setup: emfield is already setup !" 1>&2
	return 2
    fi 

    if [ "x@EMFIELD_WITH_REFLECTION@" = "x1" ]; then
	which camp-config >/dev/null 2>&1
	if [ $? -ne 0 ]; then
	    echo "ERROR: do_emfield_setup: Cannot find CAMP setup ! Abort !" 1>&2
	    return 1
	else
	    if [ ${verbose} -ne 0 ]; then
		echo "VERBOSE: do_emfield_setup: Found CAMP." 1>&2
	    fi
	fi
    fi

    # which clhep-config >/dev/null 2>&1
    # if [ $? -ne 0 ]; then
    # 	echo "ERROR: do_emfield_setup: Cannot find CLHEP setup ! Abort !" 1>&2
    # 	return 1
    # else
    # 	if [ ${verbose} -ne 0 ]; then
    # 	    echo "VERBOSE: do_emfield_setup: Found CLHEP." 1>&2
    # 	fi
    # fi

    which geomtools-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_emfield_setup: Cannot find geomtools setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_emfield_setup: Found geomtools." 1>&2
	fi
    fi
     
    export EMFIELD_ROOT="@CMAKE_INSTALL_PREFIX@"
    export EMFIELD_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export EMFIELD_NAME="@PROJECT_NAME@"
    export EMFIELD_VERSION="@emfield_VERSION@"
    export EMFIELD_BIN_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@"
    export EMFIELD_ETC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_ETCDIR@"
    export EMFIELD_LIB_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@"
    export EMFIELD_DOC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DOCDIR@"
    export EMFIELD_INCLUDE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@"
    export EMFIELD_DATA_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@"
    export EMFIELD_WITH_DEBUG=@EMFIELD_WITH_DEBUG@
    # export EMFIELD_WITH_BIO=@EMFIELD_WITH_BIO@
    # export EMFIELD_WITH_REFLECTION=@EMFIELD_WITH_REFLECTION@
    export EMFIELD_CMAKE_CONFIG_DIR="@CMAKE_INSTALL_PREFIX@/@_emfield_cmake_config_install_dir@"

    if [ -n "${PATH}" ]; then
	export PATH="${EMFIELD_BIN_DIR}:${PATH}"
    else
	export PATH="${EMFIELD_BIN_DIR}"
    fi 
   
    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${EMFIELD_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${EMFIELD_LIB_DIR}"
    fi 

    if [ ${verbose} -gt 1 ]; then
	do_emfield_print_info "VERBOSE: do_emfield_setup"
    fi
 
    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_emfield_setup: Setup emfield done." 1>&2
    fi
    return 0
}
typeset -fx do_emfield_setup

echo "NOTICE: do_emfield_setup: Please setup 'emfield' with 'do_emfield_setup'." 1>&2

# end of emfield_setup.sh