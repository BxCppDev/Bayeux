#!/bin/bash
# -*- mode: shell-script; -*-
# materials-config
#
#

opwd=$(pwd)
help=0

SCRIPTNAME="materials-config"
COMP=gcc
COMPVER=$(${COMP} --version | head -1 | cut -d ' ' -f 3)
COMPILER=-${COMP}${COMPVER}
COMPILER=

THE_SYSTEM="$(uname -s)-$(uname -m | sed -e 's/ //g')${COMPILER}"

THEPACK_ROOT=/usr/local
if [ -n "${MATERIALS_ROOT}" ]; then
    THEPACK_ROOT="${MATERIALS_ROOT}" 
else 
    echo "${SCRIPTNAME}: error: 'MATERIALS_ROOT' environment variable is not defined!" 
    exit 1
fi

THEPACK_INCLUDEDIR="${THEPACK_ROOT}/include" 

THEPACK_LIBDIR="${THEPACK_ROOT}/${THE_SYSTEM}/lib" 

THEPACK_BINDIR="${THEPACK_ROOT}/${THE_SYSTEM}/bin" 

THEPACK_VERSION="?"
if [ -f "${THEPACK_ROOT}/VERSION" ]; then
    THEPACK_VERSION="$(cat ${THEPACK_ROOT}/VERSION)"    
elif [ -f "${THEPACK_ROOT}/pkgtools.d/package.info"  ]; then
    version=$(cat ${THEPACK_ROOT}/pkgtools.d/package.info | grep "version=" | cut -d'=' -f2 )    
    THEPACK_VERSION=${version}
fi

opt=$1

if [ "x$opt" = "x" ]; then
    echo "${SCRIPTNAME}: error: Missing option!" 
    help=1
fi

if [ "x$opt" = "x--help" -o "x$opt" = "x-h" -o "x$opt" = "x-?" ]; then
    help=1
fi

if [ $help -eq 1 ]; then
    cat<<EOF
Usage: $SCRIPTNAME [OPTION]

Known values for OPTION are:

  --prefix              show materials installation prefix
  --incdir              print include directory
  --libdir              print library directory
  --bindir              print binary directory
  --include             print include path pre-processor flags without dependencies 
  --cflags              print include path pre-processor flags with dependencies
  --libs                print library linking information, without dependencies
  --ldflags             
  --libs-depends        print library linking information, with dependencies
  --help                print this help then exit
  --version             print version information
  --system              print system
  --check               check dependencies and setup

EOF
    exit 1
fi 

if [ "x$opt" = "x--system" ]; then
    echo "${THE_SYSTEM}"
    exit 0
fi 

if [ "x$opt" = "x--prefix" ]; then
    echo "${THEPACK_ROOT}"
    exit 0
fi 

if [ "x$opt" = "x--version" ]; then
    echo "${THEPACK_VERSION}"
    exit 0
fi 

if [ "x$opt" = "x--incdir" ]; then
    echo "${THEPACK_INCLUDEDIR}" 
    exit 0
fi

if [ "x$opt" = "x--include" ]; then
    echo "-I${THEPACK_INCLUDEDIR} " 
    exit 0
fi

if [ "x$opt" = "x--cflags" ]; then
    echo -n \
        "-fPIC " \
	"-I${THEPACK_INCLUDEDIR} "  \
         "`geomtools-config --include` "  \
    | python ${THEPACK_ROOT}/pkgtools.d/mkuniqueflags.py

    echo
    exit 0
fi

if [ "x$opt" = "x--libdir" ]; then
    echo "${THEPACK_LIBDIR}"
    exit 0
fi 

if [ "x$opt" = "x--bindir" ]; then
    echo "${THEPACK_BINDIR}"
    exit 0
fi 

if [ "x$opt" = "x--libs" ]; then
    echo "-L${THEPACK_LIBDIR} -lmaterials "
    exit 0
fi 

if [ "x$opt" = "x--libs-depends" -o "x$opt" = "x--ldflags" ]; then
    echo -n "-L${THEPACK_LIBDIR} -lmaterials "  \
         "`geomtools-config --libs` "  \
    | python ${THEPACK_ROOT}/pkgtools.d/mkuniqueflags.py -r
    
    echo
    exit 0
fi 

if [ "x$opt" = "x--check" ]; then
    cd ${THEPACK_ROOT}
    ${THEPACK_ROOT}/pkgtools.d/pkgtool check
    if [ $? -ne 0 ]; then
	echo "$SCRIPTNAME: error: Check procedure failed!" >&2
	cd ${opwd}
	exit 1
    fi
    cd ${opwd}
    exit 0
fi 

echo "$SCRIPTNAME: error: Unknown option '${opt}'!"  >&2
$0 --help
exit 1

# end of materials-config
