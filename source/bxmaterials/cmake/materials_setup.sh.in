# -*- mode : shell-script; -*-
# materials_setup.sh

function do_materials_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${MATERIALS_ROOT}" != "x" ]; then
	echo "${indent}Current materials setup is :" 1>&2
	echo "${indent}MATERIALS_ROOT                = '${MATERIALS_ROOT}'" 1>&2
	echo "${indent}MATERIALS_NAME                = '${MATERIALS_NAME}'" 1>&2
	echo "${indent}MATERIALS_VERSION             = '${MATERIALS_VERSION}'" 1>&2
	echo "${indent}MATERIALS_WITH_DEBUG          = ${MATERIALS_WITH_DEBUG}" 1>&2
	#echo "${indent}MATERIALS_WITH_REFLECTION     = ${MATERIALS_WITH_REFLECTION}" 1>&2
	echo "${indent}MATERIALS_BIN_DIR             = '${MATERIALS_BIN_DIR}'"
	echo "${indent}MATERIALS_ETC_DIR             = '${MATERIALS_ETC_DIR}'"
	echo "${indent}MATERIALS_LIB_DIR             = '${MATERIALS_LIB_DIR}'"
	echo "${indent}MATERIALS_DOC_DIR             = '${MATERIALS_DOC_DIR}'"
	echo "${indent}MATERIALS_INCLUDE_DIR         = '${MATERIALS_INCLUDE_DIR}'"
	echo "${indent}MATERIALS_CMAKE_CONFIG_DIR    = '${MATERIALS_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}MATERIALS_DATA_DIR            = '${MATERIALS_DATA_DIR}'" 1>&2
    else
	echo "${indent}materials is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_materials_print_info
alias materials_print_info='do_materials_print_info'

function do_materials_setup ()
{
    local verbose=0

    while [ -n "$1" ]; do
	if [ "$1" = "--verbose" -o "$1" = "-v" ]; then
	  let verbose=verbose+1
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_materials_setup: Setup materials..." 1>&2
    fi

    if [ "x${MATERIALS_ROOT}" != "x" ]; then
	echo "WARNING: do_materials_setup: materials is already setup !" 1>&2
	return 2
    fi

    if [ "x@MATERIALS_WITH_REFLECTION@" = "x1" ]; then
	which camp-config >/dev/null 2>&1
	if [ $? -ne 0 ]; then
	    echo "ERROR: do_materials_setup: Cannot find CAMP setup ! Abort !" 1>&2
	    return 1
	else
	    if [ ${verbose} -ne 0 ]; then
		echo "VERBOSE: do_materials_setup: Found CAMP." 1>&2
	    fi
	fi
    fi

    # which clhep-config >/dev/null 2>&1
    # if [ $? -ne 0 ]; then
    # 	echo "ERROR: do_materials_setup: Cannot find CLHEP setup ! Abort !" 1>&2
    # 	return 1
    # else
    # 	if [ ${verbose} -ne 0 ]; then
    # 	    echo "VERBOSE: do_materials_setup: Found CLHEP." 1>&2
    # 	fi
    # fi

    which datatools-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_materials_setup: Cannot find datatools setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_materials_setup: Found datatools." 1>&2
	fi
    fi

    export MATERIALS_ROOT="@CMAKE_INSTALL_PREFIX@"
    export MATERIALS_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export MATERIALS_NAME="@PROJECT_NAME@"
    export MATERIALS_VERSION="@materials_VERSION@"
    export MATERIALS_BIN_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@"
    export MATERIALS_ETC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_ETCDIR@"
    export MATERIALS_LIB_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@"
    export MATERIALS_DOC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DOCDIR@"
    export MATERIALS_INCLUDE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@"
    export MATERIALS_DATA_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@"
    export MATERIALS_WITH_DEBUG=@MATERIALS_WITH_DEBUG@
    export MATERIALS_WITH_BIO=@MATERIALS_WITH_BIO@
    export MATERIALS_WITH_REFLECTION=@MATERIALS_WITH_REFLECTION@
    export MATERIALS_CMAKE_CONFIG_DIR="@CMAKE_INSTALL_PREFIX@/@_materials_cmake_config_install_dir@"

    if [ -n "${PATH}" ]; then
	export PATH="${MATERIALS_BIN_DIR}:${PATH}"
    else
	export PATH="${MATERIALS_BIN_DIR}"
    fi

    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${MATERIALS_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${MATERIALS_LIB_DIR}"
    fi

    if [ ${verbose} -gt 1 ]; then
	do_materials_print_info "VERBOSE: do_materials_setup"
    fi

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_materials_setup: Setup materials done." 1>&2
    fi
    return 0
}
typeset -fx do_materials_setup

echo "NOTICE: do_materials_setup: Please setup 'materials' with 'do_materials_setup'." 1>&2

# end of materials_setup.sh