# -*- mode : shell-script; -*-
# brio_setup.sh

function do_brio_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${BRIO_ROOT}" != "x" ]; then
	echo "${indent}Current brio setup is :" 1>&2
	echo "${indent}BRIO_ROOT                = '${BRIO_ROOT}'" 1>&2
	echo "${indent}BRIO_NAME                = '${BRIO_NAME}'" 1>&2
	echo "${indent}BRIO_VERSION             = '${BRIO_VERSION}'" 1>&2
	echo "${indent}BRIO_WITH_DEBUG          = ${BRIO_WITH_DEBUG}" 1>&2
	echo "${indent}BRIO_BIN_DIR             = '${BRIO_BIN_DIR}'"
	echo "${indent}BRIO_ETC_DIR             = '${BRIO_ETC_DIR}'"
	echo "${indent}BRIO_LIB_DIR             = '${BRIO_LIB_DIR}'"
	echo "${indent}BRIO_DOC_DIR             = '${BRIO_DOC_DIR}'"
	echo "${indent}BRIO_INCLUDE_DIR         = '${BRIO_INCLUDE_DIR}'"
	echo "${indent}BRIO_CMAKE_CONFIG_DIR    = '${BRIO_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}BRIO_RESOURCE_DIR        = '${BRIO_RESOURCE_DIR}'" 1>&2
    else
	echo "${indent}brio is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_brio_print_info
alias brio_print_info='do_brio_print_info'

function do_brio_setup ()
{
    local verbose=0

    while [ -n "$1" ]; do
	if [ "$1" = "--verbose" -o "$1" = "-v" ]; then
	  let verbose=verbose+1
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_brio_setup: Setup brio..." 1>&2
    fi

    if [ "x${BRIO_ROOT}" != "x" ]; then
	echo "WARNING: do_brio_setup: brio is already setup !" 1>&2
	return 2
    fi

    export BRIO_ROOT="@CMAKE_INSTALL_PREFIX@"
    export BRIO_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export BRIO_NAME="@PROJECT_NAME@"
    export BRIO_VERSION="@brio_VERSION@"
    export BRIO_BIN_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@"
    export BRIO_ETC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_ETCDIR@"
    export BRIO_LIB_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@"
    export BRIO_DOC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DOCDIR@"
    export BRIO_INCLUDE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@"
    export BRIO_RESOURCE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@/resources"
    export BRIO_WITH_DEBUG=@BRIO_WITH_DEBUG@
    export BRIO_CMAKE_CONFIG_DIR="@CMAKE_INSTALL_PREFIX@/@_brio_cmake_config_install_dir@"

    if [ -n "${PATH}" ]; then
	export PATH="${BRIO_BIN_DIR}:${PATH}"
    else
	export PATH="${BRIO_BIN_DIR}"
    fi

    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${BRIO_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${BRIO_LIB_DIR}"
    fi

    if [ ${verbose} -gt 1 ]; then
	do_brio_print_info "VERBOSE: do_brio_setup"
    fi

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_brio_setup: Setup brio done." 1>&2
    fi
    return 0
}
typeset -fx do_brio_setup

echo "NOTICE: do_brio_setup: Please setup 'brio' with 'do_brio_setup'." 1>&2

# end of brio_setup.sh
