
brio -- README 

1 - Description:

    The brio package implements some writer/reader classes that enable
    to store/load arbitrary serializable objects using (quasi-)portable 
    binary archives from the Boost/Serialization system and ROOT files and trees 
    as storage media. 
    While loading back the data, serialized objects can then be accessed non-sequentially.
    Files may contains several 'stores' of archived data.

2 - Documentation:

    See the 'programs/test_data_io.cxx', 'include/brio/test/data.h'
    and 'src/data/cc' files for a simple use case of serialization.

    Other 'programs/test_XXX.cxx' programs show more features.

3 - Installation:

   Step 1:
  
     cd in the root directory of the 'brio' package 
     (i.e. the directory where you have found this README file).

     Run the pkgtool program using the 'info' command:

       shell>$ ./pkgtools.d/pkgtool info

     This should print some useful informations concerning the
     dependencies needed by this package.

     Then print the help page:

       shell>$ ./pkgtools.d/pkgtool --help

   Step 2:

     Run the pkgtool program using the 'configure' command:

       shell>$ ./pkgtools.d/pkgtool configure ...

   Step 3:

     Run the pkgtool program using the 'build' command to build
     the shared library provided by the package:

       shell>$ ./pkgtools.d/pkgtool build

   Step 4:

     Run the pkgtool program using the 'build bin' command to build
     the executables (production programs) provided by the package:

       shell>$ ./pkgtools.d/pkgtool build bin

   Step 4':

     Run the pkgtool program using the 'build bin_test' command to build
     the executables (test programs) provided by the package:

       shell>$ ./pkgtools.d/pkgtool build bin_test

   Step 5:

     Run the pkgtool program using the 'install' command to generate
     startup scripts suitable for your environment setup: 

       shell>$ ./pkgtools.d/pkgtool install

     Read carefully the installation hints.

   Step 6:

     Source the 'brio.sh' (or 'brio.csh') from your
     shell to setup proper environment variables (PATH, LD_LIBRARY_PATH...)

     For sh shell:

       shell>$ source brio.sh

     or for csh shells:

       shell>$ source brio.csh


     You may prefer to source these files from your startup 
     scripts (~/.bashrc, ~/.cshrc...)

   Step 7:

     Check the running of the 'brio-config' program:

       shell>$ brio-config

4 - Uninstallation and cleaning:

   To uninstall:
 
       shell>$ ./pkgtools.d/pkgtool uninstall

     It will remove autogenerated setup files.

   To 'clean' the software:
 
     shell>$ ./pkgtools.d/pkgtool clean

     It will remove object/executable and other dummy files (*~).

5 - Maintenance and bug report:

    Contact:
       Francois Mauger <mauger@lpccaen.in2p3.fr>

    URL: 
      https://nemo.lpc-caen.in2p3.fr/wiki/brio/

--
Last update: 2010-11-04 by Francois Mauger <mauger@lpccaen.in2p3.fr>

