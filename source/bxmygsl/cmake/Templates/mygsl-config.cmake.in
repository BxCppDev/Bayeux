# -*- mode: cmake; -*-
# - Config file for the mygsl package
# It defines the following variables
#  mygsl_INCLUDE_DIRS - include directories for mygsl
#  mygsl_LIBRARIES    - libraries to link against
#  mygsl_DEFINITIONS  - some build definitions
#  mygsl_WITH_DEBUG   - flag for debug mode
# If Boost/Serialization I/O system is supported :
#  mygsl_WITH_BIO     - flag for Boost/Serialization I/O DLL (a.k.a. 'bio')
# If Boost/Python wrapper module is supported :
#  mygsl_WITH_PYTHON_WRAPPER - flag for 'Boost/Python' module 

#----------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------------

if ( NOT DEFINED mygsl_CONFIG_GUARD_COUNTER )
  set ( mygsl_CONFIG_GUARD_COUNTER 1 )
  message ( STATUS "NOTICE: First inclusion of the 'mygsl-config.cmake' file from project '${PROJECT_NAME}'" )

  #----------------------------------------------------------------------------
  # Locate ourselves, since all our config files should have been installed
  # alongside us...
  #
  get_filename_component(___PackName_config_thisdir "${CMAKE_CURRENT_LIST_FILE}" PATH)
 
  message ( STATUS "DEVEL: 'mygsl-config.cmake' file is in '${___PackName_config_thisdir}'" )

  #----------------------------------------------------------------------------
  # Include the file listing all the imported targets to make them available
  # This is installed in the same location as us...
  #
  include("${___PackName_config_thisdir}/mygsl-libraries.cmake")

  # ----------------------------------------------------------------------------
  # - Dependencies :
  # Set variables pointing to used third party headers and locations.
  # We have to set the headers because mygsl exports the headers in
  # its public interface.
  set (__mygsl_more_definitions)
  set (__mygsl_more_include_dirs)
  set (__mygsl_more_libs)

  # Activate automatic cmake dependencies for home made library packages :
  set (__mygsl_automatic_cmake_dependencies @AUTOMATIC_CMAKE_DEPENDENCIES@ )

  if ( __mygsl_automatic_cmake_dependencies )
    message ( STATUS "${PROJECT_NAME}: *********************************************************************" )
    message ( STATUS "${PROJECT_NAME}: * Processing automatic dependencies for 'mygsl' -- start" )
    message ( STATUS "${PROJECT_NAME}: *********************************************************************" )
    set (__mygsl_list_of_dependencies_infos @_mygsl_list_of_dependencies_infos@ )  
    list( LENGTH __mygsl_list_of_dependencies_infos 
      __mygsl_number_of_dependencies )
    if ( __mygsl_number_of_dependencies GREATER 0 )   
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl-config.cmake: including 'mygsl_HomeMadePackageDependencies.cmake'" )      
      include("@MYGSL_CMAKE_CONFIG_FULL_DIR@/mygsl_HomeMadePackageDependencies.cmake")
      ###include("${___PackName_config_thisdir}/mygsl_HomeMadePackageDependencies.cmake")
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl-config.cmake: 'mygsl_HomeMadePackageDependencies.cmake' has been included" )      
      string (REPLACE ":" ":=" 
	__tmp_mygsl_list_of_dependencies_rules
	"${__mygsl_list_of_dependencies_infos}" 
	)
      message (STATUS "${PROJECT_NAME}: NOTICE: mygsl-config.cmake: About to process '${__tmp_mygsl_list_of_dependencies_rules}' ")
      mygsl_home_made_package_dependencies_check_list (
	"${__tmp_mygsl_list_of_dependencies_rules}"
	__tmp_mygsl_list_of_dependencies_infos
	)
      mygsl_home_made_package_dependencies_populate_build_lists (
	"${__tmp_mygsl_list_of_dependencies_infos}"
	__mygsl_more_definitions
	__mygsl_more_include_dirs
	__mygsl_more_libs
	)
      unset (__tmp_mygsl_list_of_dependencies_rules)
      unset (__tmp_mygsl_list_of_dependencies_infos)
    else ()
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl has no home made package dependency." )      
    endif ()
    unset (__mygsl_list_of_dependencies_infos)
    
    set (__mygsl_list_of_third_party_dependencies_infos @_mygsl_list_of_third_party_dependencies_infos@ )  
    list( LENGTH __mygsl_list_of_third_party_dependencies_infos 
      __mygsl_number_of_third_party_dependencies )
    if ( __mygsl_number_of_third_party_dependencies GREATER 0 )   
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl-config.cmake: including 'mygsl_ThirdPartyDependencies.cmake'" )      
      include("@MYGSL_CMAKE_CONFIG_FULL_DIR@/mygsl_ThirdPartyDependencies.cmake")
      ### include("${___PackName_config_thisdir}/mygsl_ThirdPartyDependencies.cmake")
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl-config.cmake: 'mygsl_ThirdPartyDependencies.cmake' has been included" )      
      string (REPLACE ":" ":=" 
	__tmp_mygsl_list_of_third_party_dependencies_rules
	"${__mygsl_list_of_third_party_dependencies_infos}" 
	)
      mygsl_third_party_dependencies_check_list (
	"${__tmp_mygsl_list_of_third_party_dependencies_rules}"
	__tmp_mygsl_list_of_third_party_dependencies_infos
	)
      mygsl_third_party_dependencies_populate_build_lists (
	"${__tmp_mygsl_list_of_third_party_dependencies_infos}"
	__mygsl_more_definitions
	__mygsl_more_include_dirs
	__mygsl_more_libs
	)
      unset (__tmp_mygsl_list_of_third_party_dependencies_rules)
      unset (__tmp_mygsl_list_of_third_party_dependencies_infos)
    else ()
      message ( STATUS "${PROJECT_NAME}: NOTICE: mygsl has no third-party package dependency." )      
    endif ()
    unset (__mygsl_list_of_third_party_dependencies_infos)
 
    #
    # Here one can add more stuff to check and populate dependencies 
    #
   
    message ( STATUS "${PROJECT_NAME}: *********************************************************************" )
    message ( STATUS "${PROJECT_NAME}: * Processing automatic dependencies for 'mygsl' -- stop" )
    message ( STATUS "${PROJECT_NAME}: *********************************************************************" )
  endif ( __mygsl_automatic_cmake_dependencies )
    
  # ----------------------------------------------------------------------------
  # - Set path to mygsl definitions
  #
  set ( mygsl_ONLY_DEFINITIONS )
  set ( mygsl_DEFINITIONS 
    ${mygsl_ONLY_DEFINITIONS}
    ${__mygsl_more_definitions}
    )

  #
  # Here one can append more definitions to mygsl_DEFINITIONS :
  # 

  # ----------------------------------------------------------------------------
  # - Set path to mygsl includes
  #
  set ( mygsl_ONLY_INCLUDE_DIRS @mygsl_INCLUDE_DIR@)
  set ( mygsl_INCLUDE_DIRS 
    ${mygsl_ONLY_INCLUDE_DIRS}
    ${__mygsl_more_include_dirs}
    )

  #
  # Here one can append more include paths to mygsl_INCLUDE_DIRS :
  # 

  # ----------------------------------------------------------------------------
  # - Set mygsl_LIBRARIES variable
  set(mygsl_LIB_DIR @mygsl_LIB_DIR@)
  set(mygsl_CORE_LIBRARY mygsl )
  set(mygsl_LIBRARY      ${mygsl_CORE_LIBRARY} )

  set(mygsl_WITH_DEBUG @MYGSL_WITH_DEBUG@)
  if(mygsl_WITH_DEBUG)
    set(mygsl_WITH_DEBUG 1)
  else()
    set(mygsl_WITH_DEBUG 0)
  endif()

  if ( @MYGSL_WITH_BIO_SUPPORT@ )
    set(mygsl_WITH_BIO @MYGSL_WITH_BIO@)
    if(mygsl_WITH_BIO)
      # Basic : Assume that if mygsl_bio was built, it should be in Library list
      set(mygsl_WITH_BIO 1)
      set(mygsl_BIO_LIBRARY mygsl_bio )
      set(mygsl_LIBRARY     ${mygsl_BIO_LIBRARY} )
    else()
      set(mygsl_WITH_BIO 0)
    endif()
  endif()

  if ( @MYGSL_WITH_PYTHON_WRAPPER_SUPPORT@ )
    set(mygsl_WITH_PYTHON_WRAPPER @MYGSL_WITH_PYTHON_WRAPPER@)
    if(mygsl_WITH_PYTHON_WRAPPER)
      set(mygsl_WITH_PYTHON_WRAPPER 1)
    else()
      set(mygsl_WITH_PYTHON_WRAPPER 0)
    endif()
  endif ()

  set(mygsl_ONLY_LIBRARIES ${mygsl_BIO_LIBRARY} ${mygsl_CORE_LIBRARY} )
  set(mygsl_LIBRARIES ${mygsl_LIBRARY}
    ###${__mygsl_more_libs}
    )

  #
  # Here one can append more links to mygsl_LIBRARIES :
  # 

  # -------------------------------------------------------------------------
  # - clean temporary variables :
  foreach ( __mygsl_dependency_info ${__mygsl_list_of_dependencies_infos} )
    unset ( __mygsl_${__mygsl_dependency_name}_INCLUDE_DIRS )
    unset ( __mygsl_${__mygsl_dependency_name}_LIBRARIES    )
    unset ( __mygsl_${__mygsl_dependency_name}_DEFINITIONS  )
  endforeach ()
  unset (__mygsl_more_include_dirs)
  unset (__mygsl_more_libs)
  unset (__mygsl_more_definitions)
  unset (__mygsl_list_of_dependencies_names )
  unset (__mygsl_list_of_dependencies_with_version )

  #
  # Here one can clean more stuff :
  # 

else ( NOT DEFINED mygsl_CONFIG_GUARD_COUNTER )
  message ( STATUS "WARNING: Multiple inclusion of the 'mygsl-config.cmake' file from ${PROJECT_NAME} !" )
  math (EXPR mygsl_CONFIG_GUARD_COUNTER '${mygsl_CONFIG_GUARD_COUNTER}+1' )
endif ( NOT DEFINED mygsl_CONFIG_GUARD_COUNTER )

# end
