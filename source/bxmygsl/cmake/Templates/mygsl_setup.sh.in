# -*- mode: shell-script; -*-
# mygsl_setup.sh

function do_mygsl_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${MYGSL_ROOT}" != "x" ]; then
	echo "${indent}Current mygsl setup is :" 1>&2
	echo "${indent}MYGSL_ROOT             = '${MYGSL_ROOT}'" 1>&2
	echo "${indent}MYGSL_NAME             = '${MYGSL_NAME}'" 1>&2
	echo "${indent}MYGSL_VERSION          = '${MYGSL_VERSION}'" 1>&2
	echo "${indent}MYGSL_WITH_DEBUG       = ${MYGSL_WITH_DEBUG}" 1>&2
	if [ "x1" = "x1" ]; then
	    echo "${indent}MYGSL_WITH_BIO         = ${MYGSL_WITH_BIO}" 1>&2
	fi
	if [ "x0" = "x1" ]; then
	    echo "${indent}MYGSL_WITH_PYTHON_WRAPPER = ${MYGSL_WITH_PYTHON_WRAPPER}" 1>&2
	    echo "${indent}Python module path = @CMAKE_INSTALL_FULL_PYTHONDIR@" 1>&2
	fi
	echo "${indent}MYGSL_BIN_DIR          = '${MYGSL_BIN_DIR}'"
	echo "${indent}MYGSL_ETC_DIR          = '${MYGSL_ETC_DIR}'"
	echo "${indent}MYGSL_LIB_DIR          = '${MYGSL_LIB_DIR}'"
	echo "${indent}MYGSL_DOC_DIR          = '${MYGSL_DOC_DIR}'"
	echo "${indent}MYGSL_INCLUDE_DIR      = '${MYGSL_INCLUDE_DIR}'"
	echo "${indent}MYGSL_CMAKE_CONFIG_DIR = '${MYGSL_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}MYGSL_DATA_DIR         = '${MYGSL_DATA_DIR}'" 1>&2
    else
	echo "${indent}mygsl is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_mygsl_print_info

function do_mygsl_setup ()
{
    local verbose=0
    local check_dependencies=0
    local with_automated_dependencies=0
    if [ "x@AUTOMATIC_CMAKE_DEPENDENCIES@" = "x1" -o "x@AUTOMATIC_CMAKE_DEPENDENCIES@" = "xON" ]; then
	with_automated_dependencies=1
    fi
    if [ ${with_automated_dependencies} -eq 1 ]; then
	local list_of_third_party_dependencies_infos=$(echo "@_mygsl_list_of_third_party_dependencies_infos@" | tr -d '[[:space:]]' | tr ';' ' ')
	local list_of_dependencies_infos=$(echo "@_mygsl_list_of_dependencies_infos@" | tr -d '[[:space:]]' | tr ';' ' ')
	local full_list_of_dependencies_infos=
	if [ "x${list_of_dependencies_infos}" != "x" ]; then
	    full_list_of_dependencies_infos="${full_list_of_dependencies_infos}${list_of_dependencies_infos} "
	fi
	if [ "x${list_of_third_party_dependencies_infos}" != "x" ]; then
	    full_list_of_dependencies_infos="${full_list_of_dependencies_infos}${list_of_third_party_dependencies_infos}"
	fi
    fi

    while [ -n "$1" ]; do
	local opt="$1"
	if [ "${opt}" = "--verbose" -o "${opt}" = "-v" ]; then
	    let verbose=verbose+1
	elif [ "${opt}" = "--check" -o  "${opt}" = "-c" ]; then
	    check_dependencies=1
	elif [ "${opt}" = "--no-check" -o  "${opt}" = "-C" ]; then
	    check_dependencies=0
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_mygsl_setup: Setup mygsl..." 1>&2
    fi

    if [ "x${MYGSL_ROOT}" != "x" ]; then
	echo "WARNING: do_mygsl_setup: mygsl is already setup !" 1>&2
	return 2
    fi

    if [ ${check_dependencies} -ne 0 ]; then

	if [ ${with_automated_dependencies} -eq 1 ]; then
	    for dependency_info in ${full_list_of_dependencies_infos}; do
		echo "DEVEL: Processing automatic dependency info '${dependency_info}' script !" 1>&2
		dependency_name=$(echo ${dependency_info} | cut -d':' -f1)
		dependency_version=$(echo ${dependency_info} | cut -d':' -f2)
		dependency_name_lower=$(echo ${dependency_name} | tr "A-Z" "a-z" )
		dependency_name_upper=$(echo ${dependency_name} | tr "a-z" "A-Z" )
		dependency_config_script="${dependency_name_lower}-config"
		dependency_config_script_ENVNAME="${dependency_name_upper}_CONFIG_SCRIPT"
		if [ "x${!dependency_config_script_ENVNAME}" != "x" ]; then
		    dependency_config_script="${!dependency_config_script_ENVNAME}"
		fi
		which ${dependency_config_script} >/dev/null 2>&1
		if [ $? -eq 1 ]; then
		    echo "WARNING: No support for a '${dependency_config_script}' script !" 1>&2
		fi
	    done
	else
	    echo -n
   	    #
            # Please put here any alternative dependency check to the automated driver above
            #
	fi

	#
        # Please put here any additional dependency check you may find useful
        #

    fi

    export MYGSL_ROOT="@CMAKE_INSTALL_PREFIX@"
    export MYGSL_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export MYGSL_NAME="@mygsl_PACKAGE_NAME@"
    export MYGSL_VERSION="@mygsl_VERSION_STR@"
    export MYGSL_BIN_DIR="@CMAKE_INSTALL_FULL_BINDIR@"
    export MYGSL_ETC_DIR="@CMAKE_INSTALL_FULL_ETCDIR@"
    export MYGSL_LIB_DIR="@CMAKE_INSTALL_FULL_LIBDIR@"
    export MYGSL_DOC_DIR="@CMAKE_INSTALL_FULL_DOCDIR@"
    export MYGSL_INCLUDE_DIR="@CMAKE_INSTALL_FULL_INCLUDEDIR@"
    export MYGSL_DATA_DIR="@CMAKE_INSTALL_FULL_DATADIR@"
    export MYGSL_WITH_DEBUG=@MYGSL_WITH_DEBUG@
    if [ "x1" = "x1" ]; then
	export MYGSL_WITH_BIO=@MYGSL_WITH_BIO@
    fi
    if [ "x0" = "x1" ]; then
	export MYGSL_WITH_PYTHON_WRAPPER=@MYGSL_WITH_PYTHON_WRAPPER@
    fi
    export MYGSL_CMAKE_CONFIG_DIR="@MYGSL_CMAKE_CONFIG_FULL_DIR@"
    # Default behaviour :
    # export MYGSL_CONFIG_SCRIPT="mygsl-config"
    # export MYGSL_CONFIG_SCRIPT_DEFAULT_DEFINITIONS=""
    # export MYGSL_CONFIG_SCRIPT_DEFAULT_CFLAGS_SWITCH="--cflags"
    # export MYGSL_CONFIG_SCRIPT_DEFAULT_LDFLAGS_SWITCH="--ldflags"

    if [ -n "${PATH}" ]; then
	export PATH="${MYGSL_BIN_DIR}:${PATH}"
    else
	export PATH="${MYGSL_BIN_DIR}"
    fi

    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${MYGSL_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${MYGSL_LIB_DIR}"
    fi

    if [ "x0" = "x1" ]; then
	if [ "x@MYGSL_WITH_PYTHON_WRAPPER@" = "xON" ]; then
     	    # update Python path...
	    if [ -n "${PYTHONPATH}" ]; then
		export PYTHONPATH="@CMAKE_INSTALL_FULL_PYTHONDIR@:${PYTHONPATH}"
	    else
		export PYTHONPATH="@CMAKE_INSTALL_FULL_PYTHONDIR@"
	    fi
	fi
    fi

    if [ ${verbose} -gt 1 ]; then
	do_mygsl_print_info "VERBOSE: do_mygsl_setup"
    fi

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_mygsl_setup: Setup mygsl done." 1>&2
    fi
    return 0
}
typeset -fx do_mygsl_setup

echo "NOTICE: do_mygsl_setup: Please setup mygsl with 'do_mygsl_setup'." 1>&2

# end of mygsl_setup.sh
