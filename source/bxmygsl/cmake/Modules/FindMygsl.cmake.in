# Locate mygsl library
# This module defines
#  MYGSL_FOUND, if false, do not try to link to MYGSL
#  MYGSL_LIBRARIES
#  MYGSL_INCLUDE_DIRS, where to find mygsl/mygsl_config.h
#  MYGSL_LIBRARIES_DEPEND
#  MYGSL_INCLUDE_DIRS_DEPEND

FIND_PATH(MYGSL_INCLUDE_DIR mygsl/mygsl_config.h
  HINTS
  $ENV{MYGSL_ROOT_DIR}
  PATH_SUFFIXES include
  PATHS
  [HKEY_LOCAL_MACHINE\\SOFTWARE\\mygsl]
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw # Fink
  /opt/local # DarwinPorts
  /opt/csw # Blastwave
  /opt
)

FIND_LIBRARY(MYGSL_LIBRARY 
  NAMES mygsl
  HINTS
  $ENV{MYGSL_ROOT_DIR}
  PATH_SUFFIXES lib64 lib
  PATHS
  [HKEY_LOCAL_MACHINE\\SOFTWARE\\mygsl]
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw
  /opt/local
  /opt/csw
  /opt
)

SET(MYGSL_VERSION   "${MYGSL_VERSION_STR}" CACHE STRING "MYGSL Version")
SET(MYGSL_LIBRARIES "${MYGSL_LIBRARY}"     CACHE STRING "MYGSL Libraries")
SET(MYGSL_INCLUDE_DIRS "${MYGSL_INCLUDE_DIR}"  CACHE STRING "MYGSL include dirs")

set ( MYGSL_LIBRARIES_DEPEND 
      ${MYGSL_LIBRARIES}
      @DATATOOLS_LIBRARIES_DEPEND@
      @GSL_LIBRARIES@ 
    )

if (DATATOOLS_WITH_PYTHON_WRAPPER)
  list ( APPEND DATATOOLS_LIBRARIES_DEPEND 
         python )
endif ()

set ( MYGSL_INCLUDE_DIRS_DEPEND
      ${MYGSL_INCLUDE_DIRS}
      @DATATOOLS_INCLUDE_DIRS@
      @GSL_INCLUDE_DIR@
    )

INCLUDE(FindPackageHandleStandardArgs)
# handle the QUIETLY and REQUIRED arguments and set MYGSL_FOUND to TRUE if 
# all listed variables are TRUE
FIND_PACKAGE_HANDLE_STANDARD_ARGS(MYGSL DEFAULT_MSG MYGSL_LIBRARIES MYGSL_INCLUDE_DIRS)

MARK_AS_ADVANCED(MYGSL_VERSION
                 MYGSL_INCLUDE_DIRS
                 MYGSL_LIBRARIES 
                 MYGSL_INCLUDE_DIRS_DEPEND
                 MYGSL_LIBRARIES_DEPEND 
                 )

