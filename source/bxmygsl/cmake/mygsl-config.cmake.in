# - Config file for the mygsl package
# It defines the following variables
#  mygsl_INCLUDE_DIRS - include directories for mygsl
#  mygsl_LIBRARY      - libraries to link against
#  mygsl_BIO_LIBRARY  - library targets to link against (Boost I/O library)
#  mygsl_REFLECTION_LIBRARY - library targets to link against (reflection library)
#  mygsl_LIBRARIES    - libraries to link against
#  mygsl_WITH_BIO     - flag for Boost/Serialization I/O DLL (a.k.a. 'bio')
#  mygsl_WITH_REFLECTION  - flag for reflection DLL

#-----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-----------------------------------------------------------------------

set(mygsl_WITH_BIO        @MYGSL_WITH_BIO@)
set(mygsl_WITH_REFLECTION @MYGSL_WITH_REFLECTION@)

#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(_thisdir "${CMAKE_CURRENT_LIST_FILE}" PATH)

#-----------------------------------------------------------------------
# Include the file listing all the imported targets to make them available
# This is installed in the same location as us...
# Protect it with an in-memory variable so that we don't include
# it twice should multiple calls to find_package be made
if(NOT mygsl_LIBDEPS_LOADED)
  include("${_thisdir}/mygsl-libraries.cmake")
  set(mygsl_LIBDEPS_LOADED 1)
endif()

#-----------------------------------------------------------------------
# Set variables pointing to used third party headers and locations.
# We have to set the headers because mygsl exports the headers in
# its public interface.
# The locations are set so that clients using those packages (i.e. Boost and
# ROOT), can re-find them if needed using exact locations (EXPERIMENTAL)
# e.g:
#
#  find_package(mygsl)
#  set(BOOST_ROOT ${mygsl_BOOST_ROOT})
#  find_package(Boost NO_DEFAULT_PATH)
#
set(mygsl_THIRD_PARTY_INCLUDE_DIRS
  @datatools_INCLUDE_DIRS@
  @GSL_INCLUDE_DIRS@
  )

if(mygsl_WITH_REFLECTION)
  list(INSERT mygsl_THIRD_PARTY_INCLUDE_DIRS 0
     @CAMP_INCLUDE_DIR@
  )
endif()

#-----------------------------------------------------------------------
# Set mygsl definitions, include paths and library variables
#
get_filename_component(_mygsl_inc "${_thisdir}/@TO_MYGSL_INCLUDEDIR@" ABSOLUTE)

set(mygsl_INCLUDE_DIR "${_mygsl_inc}" CACHE PATH "Path to mygsl headers")

set(mygsl_INCLUDE_DIRS
  ${mygsl_INCLUDE_DIR}
  ${mygsl_THIRD_PARTY_INCLUDE_DIRS}
  )

#-----------------------------------------------------------------------
# Set mygsl_LIBRARIES variable
set(mygsl_LIBRARY mygsl CACHE PATH "Path to mygsl library")

if(mygsl_WITH_BIO)
  set(mygsl_BIO_LIBRARY mygsl_bio)
endif()

if(mygsl_WITH_REFLECTION)
  set(mygsl_REFLECTION_LIBRARY mygsl_reflection)
endif()
  
set(mygsl_LIBRARIES ${mygsl_LIBRARY})

unset(_mygsl_inc)
# end
