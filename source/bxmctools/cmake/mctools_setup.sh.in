# -*- mode : shell-script; -*-
# mctools_setup.sh

function do_mctools_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${MCTOOLS_ROOT}" != "x" ]; then
	echo "${indent}Current mctools setup is :" 1>&2
	echo "${indent}MCTOOLS_ROOT                = '${MCTOOLS_ROOT}'" 1>&2
	echo "${indent}MCTOOLS_NAME                = '${MCTOOLS_NAME}'" 1>&2
	echo "${indent}MCTOOLS_VERSION             = '${MCTOOLS_VERSION}'" 1>&2
	echo "${indent}MCTOOLS_WITH_DEBUG          = ${MCTOOLS_WITH_DEBUG}" 1>&2
	echo "${indent}MCTOOLS_WITH_BIO            = ${MCTOOLS_WITH_BIO}" 1>&2
	echo "${indent}MCTOOLS_WITH_REFLECTION     = ${MCTOOLS_WITH_REFLECTION}" 1>&2
	echo "${indent}MCTOOLS_WITH_G4             = ${MCTOOLS_WITH_G4}" 1>&2
	echo "${indent}MCTOOLS_BIN_DIR             = '${MCTOOLS_BIN_DIR}'" 1>&2
	echo "${indent}MCTOOLS_ETC_DIR             = '${MCTOOLS_ETC_DIR}'" 1>&2
	echo "${indent}MCTOOLS_LIB_DIR             = '${MCTOOLS_LIB_DIR}'" 1>&2
	echo "${indent}MCTOOLS_DOC_DIR             = '${MCTOOLS_DOC_DIR}'" 1>&2
	echo "${indent}MCTOOLS_INCLUDE_DIR         = '${MCTOOLS_INCLUDE_DIR}'" 1>&2
	echo "${indent}MCTOOLS_CMAKE_CONFIG_DIR    = '${MCTOOLS_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}MCTOOLS_DATA_DIR            = '${MCTOOLS_DATA_DIR}'" 1>&2
    else
	echo "${indent}mctools is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_mctools_print_info
alias mctools_print_info='do_mctools_print_info'

function do_mctools_setup ()
{
    local verbose=0

    while [ -n "$1" ]; do
	if [ "$1" = "--verbose" -o "$1" = "-v" ]; then
	  let verbose=verbose+1
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_mctools_setup: Setup mctools..." 1>&2
    fi

    if [ "x${MCTOOLS_ROOT}" != "x" ]; then
	echo "WARNING: do_mctools_setup: mctools is already setup !" 1>&2
	return 2
    fi

    which dpp-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_mctools_setup: Cannot find dpp setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_mctools_setup: Found dpp." 1>&2
	fi
    fi

    which genbb_help-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_mctools_setup: Cannot find genbb_help setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_mctools_setup: Found genbb_help." 1>&2
	fi
    fi

    which genvtx-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_mctools_setup: Cannot find genvtx setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_mctools_setup: Found genvtx." 1>&2
	fi
    fi

    which emfield-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_mctools_setup: Cannot find emfield setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_mctools_setup: Found emfield." 1>&2
	fi
    fi

    export MCTOOLS_ROOT="@CMAKE_INSTALL_PREFIX@"
    export MCTOOLS_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export MCTOOLS_NAME="@PROJECT_NAME@"
    export MCTOOLS_VERSION="@mctools_VERSION@"
    export MCTOOLS_BIN_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@"
    export MCTOOLS_ETC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_ETCDIR@"
    export MCTOOLS_LIB_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@"
    export MCTOOLS_DOC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DOCDIR@"
    export MCTOOLS_INCLUDE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@"
    export MCTOOLS_DATA_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@"
    export MCTOOLS_WITH_DEBUG=@MCTOOLS_WITH_DEBUG@
    export MCTOOLS_WITH_BIO=@MCTOOLS_WITH_BIO@
    export MCTOOLS_WITH_REFLECTION=@MCTOOLS_WITH_REFLECTION@
    export MCTOOLS_WITH_G4=@MCTOOLS_WITH_G4@
    export MCTOOLS_CMAKE_CONFIG_DIR="@CMAKE_INSTALL_PREFIX@/@_mctools_cmake_config_install_dir@"

    if [ -n "${PATH}" ]; then
	export PATH="${MCTOOLS_BIN_DIR}:${PATH}"
    else
	export PATH="${MCTOOLS_BIN_DIR}"
    fi

    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${MCTOOLS_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${MCTOOLS_LIB_DIR}"
    fi

    if [ ${verbose} -gt 1 ]; then
	do_mctools_print_info "VERBOSE: do_mctools_setup"
    fi

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_mctools_setup: Setup mctools done." 1>&2
    fi
    return 0
}
typeset -fx do_mctools_setup

echo "NOTICE: do_mctools_setup: Please setup 'mctools' with 'do_mctools_setup'." 1>&2

# end of mctools_setup.sh