# -*- mode : shell-script; -*-
# dpp_setup.sh

function do_dpp_print_info ()
{
    local indent=""
    if [ "x$1" != "x" ]; then
	indent="${1}: "
	shift 1
    fi
    if [ "x${DPP_ROOT}" != "x" ]; then
	echo "${indent}Current dpp setup is :" 1>&2
	echo "${indent}DPP_ROOT                = '${DPP_ROOT}'" 1>&2
	echo "${indent}DPP_NAME                = '${DPP_NAME}'" 1>&2
	echo "${indent}DPP_VERSION             = '${DPP_VERSION}'" 1>&2
	echo "${indent}DPP_WITH_DEBUG          = ${DPP_WITH_DEBUG}" 1>&2
	echo "${indent}DPP_WITH_BIO            = ${DPP_WITH_BIO}" 1>&2
	echo "${indent}DPP_WITH_REFLECTION     = ${DPP_WITH_REFLECTION}" 1>&2
	echo "${indent}DPP_BIN_DIR             = '${DPP_BIN_DIR}'"
	echo "${indent}DPP_ETC_DIR             = '${DPP_ETC_DIR}'"
	echo "${indent}DPP_LIB_DIR             = '${DPP_LIB_DIR}'"
	echo "${indent}DPP_DOC_DIR             = '${DPP_DOC_DIR}'"
	echo "${indent}DPP_INCLUDE_DIR         = '${DPP_INCLUDE_DIR}'"
	echo "${indent}DPP_CMAKE_CONFIG_DIR    = '${DPP_CMAKE_CONFIG_DIR}'" 1>&2
	echo "${indent}DPP_DATA_DIR            = '${DPP_DATA_DIR}'" 1>&2
    else
	echo "${indent}dpp is not setup." 1>&2
    fi
    return 0
}
typeset -fx do_dpp_print_info
alias dpp_print_info='do_dpp_print_info'

function do_dpp_setup ()
{
    local verbose=0
    
    while [ -n "$1" ]; do
	if [ "$1" = "--verbose" -o "$1" = "-v" ]; then
	  let verbose=verbose+1
	fi
	shift 1
    done

    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_dpp_setup: Setup dpp..." 1>&2
    fi

    if [ "x${DPP_ROOT}" != "x" ]; then
	echo "WARNING: do_dpp_setup: dpp is already setup !" 1>&2
	return 2
    fi 

    # if [ "x@DPP_WITH_REFLECTION@" = "x1" ]; then
    # 	which camp-config >/dev/null 2>&1
    # 	if [ $? -ne 0 ]; then
    # 	    echo "ERROR: do_dpp_setup: Cannot find CAMP setup ! Abort !" 1>&2
    # 	    return 1
    # 	else
    # 	    if [ ${verbose} -ne 0 ]; then
    # 		echo "VERBOSE: do_dpp_setup: Found CAMP." 1>&2
    # 	    fi
    # 	fi
    # fi

    which brio-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_dpp_setup: Cannot find brio setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_dpp_setup: Found brio." 1>&2
	fi
    fi

    which cuts-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_dpp_setup: Cannot find cuts setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_dpp_setup: Found cuts." 1>&2
	fi
    fi

    which mygsl-config >/dev/null 2>&1
    if [ $? -ne 0 ]; then
	echo "ERROR: do_dpp_setup: Cannot find mygsl setup ! Abort !" 1>&2
	return 1
    else
	if [ ${verbose} -ne 0 ]; then
	    echo "VERBOSE: do_dpp_setup: Found mygsl." 1>&2
	fi
    fi
     
    export DPP_ROOT="@CMAKE_INSTALL_PREFIX@"
    export DPP_ROOT_DIR="@CMAKE_INSTALL_PREFIX@"
    export DPP_NAME="@PROJECT_NAME@"
    export DPP_VERSION="@dpp_VERSION@"
    export DPP_BIN_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@"
    export DPP_ETC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_ETCDIR@"
    export DPP_LIB_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@"
    export DPP_DOC_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DOCDIR@"
    export DPP_INCLUDE_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@"
    export DPP_DATA_DIR="@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@"
    export DPP_WITH_DEBUG=@DPP_WITH_DEBUG@
    export DPP_WITH_BIO=@DPP_WITH_BIO@
    export DPP_WITH_REFLECTION=@DPP_WITH_REFLECTION@
    export DPP_CMAKE_CONFIG_DIR="@CMAKE_INSTALL_PREFIX@/@_dpp_cmake_config_install_dir@"

    if [ -n "${PATH}" ]; then
	export PATH="${DPP_BIN_DIR}:${PATH}"
    else
	export PATH="${DPP_BIN_DIR}"
    fi 
   
    if [ -n "${@_ld_library_path_env@}" ]; then
	export @_ld_library_path_env@="${DPP_LIB_DIR}:${@_ld_library_path_env@}"
    else
	export @_ld_library_path_env@="${DPP_LIB_DIR}"
    fi 

    if [ ${verbose} -gt 1 ]; then
	do_dpp_print_info "VERBOSE: do_dpp_setup"
    fi
 
    if [ ${verbose} -ne 0 ]; then
	echo "NOTICE: do_dpp_setup: Setup dpp done." 1>&2
    fi
    return 0
}
typeset -fx do_dpp_setup

echo "NOTICE: do_dpp_setup: Please setup 'dpp' with 'do_dpp_setup'." 1>&2

# end of dpp_setup.sh