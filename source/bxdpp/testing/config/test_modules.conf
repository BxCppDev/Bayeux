# Event processing modules

#@description A list of setups for processing  hits
#@key_label   "name"
#@meta_label  "type"

############################################################################

# An output I/O  module processor :
[name="output0" type="dpp::io_module"]

#@description Debug flag
debug : boolean = 0

#@description Input/output mode
mode : string = "output"

#@description Forbid the overwriting of already existing output data files
output.preserve_existing : boolean = 1

#@description Maximum number of event records per output file
output.max_record_per_file : integer = 30

#@description Maximum number of output files
output.max_files : integer = 10

#@description Maximum total number of event records
output.max_record_total : integer = 200

#@description Output file mode
output.mode : string = "incremental"

#@description Path to output data file
output.incremental.path : string = "${DPP_TMP_TEST_DIR}"

#@description Output data file extension
output.incremental.prefix : string = "test_data_output0_"

#@description Output data file prefix (supported: ".txt", ".data", ".xml", ".txt.gz", ".data.gz", ".xml.gz", ".brio", ".trio")
#output.incremental.extension : string = ".brio"
output.incremental.extension : string = ".txt"

#@description Set the filename incrementation step
output.incremental.increment : integer = 1

#@description Set the filename starting index (default is 0)
output.incremental.start : integer = 0

#@description Set the filename stopping index
output.incremental.stop : integer = 10

#@description The label of the Context service
Ctx_label : string  = "Ctx"


############################################################################

# An output I/O  module processor :
[name="output1" type="dpp::io_module"]

#@description Debug flag
debug : boolean = 0

#@description Input/output mode
mode : string = "output"

#@description Forbid the overwriting of already existing output data files
output.preserve_existing : boolean = 1

#@description Maximum number of event records per output file
output.max_record_per_file : integer = 30

#@description Maximum number of output files
output.max_files : integer = 10

#@description Maximum total number of event records
output.max_record_total : integer = 200

#@description Output file mode
output.mode : string = "incremental"

#@description Path to output data file
output.incremental.path : string = "${DPP_TMP_TEST_DIR}"

#@description Output data file extension
output.incremental.prefix : string = "test_data_output1_"

#@description Output data file prefix (supported: ".txt", ".data", ".xml", ".txt.gz", ".data.gz", ".xml.gz", ".brio", ".trio")
#output.incremental.extension : string = ".brio"
output.incremental.extension : string = ".txt"

#@description Set the filename incrementation step
output.incremental.increment : integer = 1

#@description Set the filename starting index (default is 0)
output.incremental.start : integer = 0

#@description Set the filename stopping index
output.incremental.stop : integer = 10

#@description The label of the Context service
Ctx_label : string  = "Ctx"


############################################################################

# An input I/O  module processor :
[name="input0" type="dpp::io_module"]

#@description Debug flag
debug : boolean = 0

#@description Input/output mode
mode : string = "input"

#@description Maximum number of event records per input file
#input.max_record_per_file : integer = 0

#@description Maximum number of input files
input.max_files : integer = 6

#@description Maximum total number of event records
#input.max_record_total : integer = 76

#@description Output file mode
input.mode : string = "incremental"

#@description Path to output data file
input.incremental.path : string = "${DPP_DATA_DIR}/testing/data"
#input.incremental.path : string = "${DPP_DATA_DIR}/testing/legacy_data"

#@description Output data file extension
input.incremental.prefix : string = "data_"

#@description Output data file prefix (supported: ".txt", ".data", ".xml", ".txt.gz", ".data.gz", ".xml.gz")
input.incremental.extension : string = ".txt.gz"

#@description Set the filename incrementation step
input.incremental.increment : integer = 1

#@description Set the filename starting index (default is 0)
input.incremental.start : integer = 0

#@description Set the filename stopping index
input.incremental.stop : integer = 3

#@description The label of the Context service
Ctx_label : string  = "Ctx"


############################################################################

# A dummy processor :
[name="d1" type="dpp::dummy_module"]

#@description Debug flag
debug : boolean = 0

#@description The processor target bank (optional, default is "GP")
GP_label : string = "Header"

#@description The processor flag name
flag_name : string = "d1_label"

#@description Force the module initialization at load stage (not at the first use)
force_initialization_at_load : boolean = 1

############################################################################

# Another dummy processor :
[name="d2" type="dpp::dummy_module"]

#@description Debug flag
debug : boolean = 0

#@description The processor label (optional, default is "GP")
GP_label : string = "Header"

#@description The processor label
flag_name : string = "d2_label"


############################################################################

# Yet another dummy processor :
[name="d3" type="dpp::dummy_module"]

#@description Debug flag
debug : boolean = 0

#@description The processor label (optional, default is "GP")
GP_label : string = "Header"

#@description The processor label
flag_name : string = "d3_label"


############################################################################

# A processor that clears the event record (removing all 'banks':
[name="clear" type="dpp::utils_module"]

#@description Debug flag
debug : boolean = 0

#@description The processor mode
mode : string = "clear"


############################################################################

# A processor that remove the 'bank' of simulated data stored in the event record
[name="remove_header" type="dpp::utils_module"]

#@description Debug flag
debug : boolean = 0

#@description The processor mode
mode : string = "remove_one_typed_bank"

#@description The label of the bank to be removed
mode.remove_one_typed_bank.label : string = "Header"

#@description The type (serial tag) of the bank to be removed
mode.remove_one_typed_bank.type : string = "datatools::properties"
#mode.remove_one_typed_bank.type : string = "datatools::utils::properties"


############################################################################

# A processor that dumps the 'banks' in some output stream
[name="dump_cout" type="dpp::dump_module"]

#@description Debug flag
debug : boolean = 0

#@description The title 
title : string = "Event record"

#@description The indentation prefix
indent : string = "=== "

#@description The output mode (cout, clog, file)
output : string = "cout"


############################################################################

# A processor that dumps the 'banks' in some output stream
[name="dump_in_file" type="dpp::dump_module"]

#@description Debug flag
debug : boolean = 0

#@description The title 
title : string = "Event record"

#@description The indentation prefix
indent : string = ""

#@description The output mode (cout, clog, file)
output : string = "file"

#@description The output dump filename
output.filename : string = "${DPP_TMP_TEST_DIR}/test_dpp_dump_module.out"


############################################################################

# A module that chains several other modules :
[name="chain0" type="dpp::chain_module"]

#@description Debug flag
debug : boolean = 1

#@description The list of processing modules to be applied (in this order) :
modules : string [5] = "d1" \
                       "d2" \
		       "output0" \
                       "d3" \
		       "dump_cout"

#@description Force the module initialization at load stage (default : 0)
force_initialization_at_load : boolean = 0


############################################################################

# A conditional processor module :
[name="dump_only_with_header" type="dpp::if_module"]

#@description Debug flag
debug : boolean = 0

#@description The label/name of the 'cut service'
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "random"

#@description The name of the module to be processed when condition is checked
then_module : string = "dump_in_file"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "remove_header"


############################################################################

# A module that chains several other modules :
[name="chain1" type="dpp::chain_module"]

#@description Debug flag
debug : boolean = 1

#@description The list of processing modules to be applied (in this order) :
modules : string [5] = "d1" \
                       "d2" \
		       "output1" \
                       "d3" \
                       "dump_only_with_header" 

#@description Force the module initialization at load stage (default : 0)
force_initialization_at_load : boolean = 0


# end
