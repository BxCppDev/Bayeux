# - Config file for the geomtools package
# It defines the following variables
#  geomtools_INCLUDE_DIRS - include directories for geomtools
#  geomtools_LIBRARIES    - libraries to link against
#  geomtools_WITH_DEBUG   - flag for debug mode
# If Boost/Serialization I/O system is supported :
#  geomtools_WITH_BIO     - flag for Boost/Serialization I/O DLL (a.k.a. 'bio')
# If Boost/Python wrapper module is supported :
#  geomtools_WITH_PYTHON_WRAPPER - flag for 'Boost/Python' module 

#----------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------------

if ( NOT DEFINED geomtools_CONFIG_COUNTER )
set ( geomtools_CONFIG_COUNTER 1 )

#----------------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(_thisdir "${CMAKE_CURRENT_LIST_FILE}" PATH)


#----------------------------------------------------------------------------
# Include the file listing all the imported targets to make them available
# This is installed in the same location as us...
#
include("${_thisdir}/geomtools-libraries.cmake")


#----------------------------------------------------------------------------
# Set variables pointing to used third party headers and locations.
# We have to set the headers because geomtools exports the headers in
# its public interface.

#----------------------------------------------------------------------------
# Set path to geomtools includes
#
set(geomtools_INCLUDE_DIR @geomtools_INCLUDE_DIR@)
set(geomtools_INCLUDE_DIRS
  ${geomtools_INCLUDE_DIR}
  )

# ----------------------------------------------------------------------------
# mygsl dependency :
#
set ( mygsl_DIR "${mygsl_DIR}" )
find_package ( mygsl "3.0" NO_MODULE )
if ( NOT DEFINED mygsl_CONFIG)
   message ( FATAL_ERROR "Cannot find the 'mygsl' library !" )
else ()
   message ( STATUS "Found the 'mygsl' library version ${mygsl_VERSION} !" )
endif ()

# ----------------------------------------------------------------------------
# Gnuplot dependency :
#
find_package ( Gnuplot "4" REQUIRED)
if ( NOT GNUPLOT_FOUND )
   message ( FATAL_ERROR "Cannot find 'gnuplot' program !" )
else ()
   message ( STATUS "Found the 'gnuplot' program : '${GNUPLOT_EXECUTABLE}'" )   
endif () 

# ----------------------------------------------------------------------------
set ( _geomtools_mygsl_INCLUDE_DIRS @mygsl_INCLUDE_DIRS@ )
set ( geomtools_INCLUDE_DIRS 
      ${geomtools_INCLUDE_DIRS}
      ${_geomtools_mygsl_INCLUDE_DIRS}
     )
unset ( _geomtools_mygsl_INCLUDE_DIRS )

# ----------------------------------------------------------------------------
# Set geomtools_LIBRARIES variable
set(geomtools_LIB_DIR @geomtools_LIB_DIR@)
# Basic : Assume that if geomtools_bio was built, it should be in Library list
set(geomtools_LIBRARY geomtools )

set(geomtools_WITH_DEBUG @GEOMTOOLS_WITH_DEBUG@)
if(geomtools_WITH_DEBUG)
  set(geomtools_WITH_DEBUG 1)
else()
  set(geomtools_WITH_DEBUG 0)
endif()

if ( @GEOMTOOLS_WITH_BIO_SUPPORT@ )
 set(geomtools_WITH_BIO @GEOMTOOLS_WITH_BIO@)
 if(geomtools_WITH_BIO)
   set(geomtools_WITH_BIO 1)
   set(geomtools_BIO_LIBRARY geomtools_bio )
 else()
   set(geomtools_WITH_BIO 0)
 endif()
endif()

if ( @GEOMTOOLS_WITH_PYTHON_WRAPPER_SUPPORT@ )
  set(geomtools_WITH_PYTHON_WRAPPER @GEOMTOOLS_WITH_PYTHON_WRAPPER@)
  if(geomtools_WITH_PYTHON_WRAPPER)
    set(geomtools_WITH_PYTHON_WRAPPER 1)
  else()
    set(geomtools_WITH_PYTHON_WRAPPER 0)
  endif()
endif ()

set ( geomtools_LIBRARIES ${geomtools_BIO_LIBRARY} ${geomtools_LIBRARY} )

set (_geomtools_mygsl_LIBRARIES @mygsl_LIBRARIES@ )
set ( geomtools_LIBRARIES 
      ${geomtools_LIBRARIES}
      ${_geomtools_mygsl_LIBRARIES}
    )
unset ( _geomtools_mygsl_LIBRARIES )

else ( NOT DEFINED geomtools_CONFIG_COUNTER )
  message ( WARNING "Multiple inclusion of the 'geomtools-config.cmake' file !" )
  math (EXPR geomtools_CONFIG_COUNTER '${geomtools_CONFIG_COUNTER}+1' )
endif ( NOT DEFINED geomtools_CONFIG_COUNTER )

# end
